<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZiGma</title>
  
  
  <link href="http://www.zigma.cc/atom.xml" rel="self"/>
  
  <link href="http://www.zigma.cc/"/>
  <updated>2022-01-05T00:46:39.484Z</updated>
  <id>http://www.zigma.cc/</id>
  
  <author>
    <name>ZiGma</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>玩转Moon FM之自建播客</title>
    <link href="http://www.zigma.cc/2022/01/04/%E7%8E%A9%E8%BD%ACMoon%20FM%E4%B9%8B%E8%87%AA%E5%BB%BA%E6%92%AD%E5%AE%A2/"/>
    <id>http://www.zigma.cc/2022/01/04/%E7%8E%A9%E8%BD%ACMoon%20FM%E4%B9%8B%E8%87%AA%E5%BB%BA%E6%92%AD%E5%AE%A2/</id>
    <published>2022-01-04T04:25:10.000Z</published>
    <updated>2022-01-05T00:46:39.484Z</updated>
    
    <content type="html"><![CDATA[<h2 id="提出需求"><a href="#提出需求" class="headerlink" title="提出需求"></a>提出需求</h2><p>不知道什么时候开始喜欢在上下班通勤路上听听播客，大约是日谈公园入的坑，个人比较喜欢的一些播客节目有：</p><ul><li><p>淼叔的犯罪探案故事；</p></li><li><p>奶杨杨原博士聊各种故宫里的八卦；</p></li><li><p>柯紫小姐姐各种科普的日知录；</p></li><li><p>啤酒事务局入坑了精酿；</p></li><li><p>TSP怪奇档案听听ghs的聊斋故事……</p></li></ul><p>但是iOS14开始，苹果自带的播客在CarPlay中经常会遇到循环播放的bug：播放没几分钟，就会跳回开始，然后无限重复。因此不得不寻求播客App的替代品。</p><p>而且也因工作需要，想在通勤时听一些《民法典》法条解读，虽然存在手机里面用播放器也能播放，但是nPlayer并不能很好支持CarPlay。</p><p>因此，就大致有了如下的需求：</p><ol><li>支持CarPlay</li><li>播放流畅（没有恶性bug）</li><li>支持向前、向后回放15s或30s</li><li>支持自定义音频导入</li></ol><p><strong>各App优缺点（未做深度评测，如果你觉得好用，那就是你对）</strong></p><table><thead><tr><th>App</th><th>优点</th><th align="left">缺点</th></tr></thead><tbody><tr><td>官方播客</td><td>自带，无需下载App，可自定义RSS订阅</td><td align="left">CarPlay存在致命bug</td></tr><tr><td>网易云音乐</td><td>使用了UnBlockMusic功能听歌，所以对于我来说无需切换App</td><td align="left">不支持自定义音频导入或自定义RSS订阅，CarPlay中无前后15s功能</td></tr><tr><td>小宇宙</td><td>界面比较漂亮（未测试CarPlay）</td><td align="left">不支持自定义音频导入或自定义RSS订阅，虽然支持OPML导入节目，但是需要从其他App导入</td></tr><tr><td>Overcast</td><td>自定义功能比较强</td><td align="left">本地化不尽人意，UI略丑，播放界面有广告</td></tr><tr><td>Moon FM</td><td>界面比较漂亮，CarPlay支持（节目封面加载有一些bug，开发者回应未来版本适配CarPlay api 2.0）</td><td align="left">付费App（不过经常限免）；同步需自建数据库；</td></tr></tbody></table><p>Moon FM在少数派也有过多人推荐和介绍，所以这里就不重复造轮子了。</p><blockquote><p>Moon FM官方网站</p><p><a href="https://moon.fm/">https://moon.fm/</a></p></blockquote><h2 id="搭建自定义播客，以《民法典-婚姻家庭编》为例"><a href="#搭建自定义播客，以《民法典-婚姻家庭编》为例" class="headerlink" title="搭建自定义播客，以《民法典-婚姻家庭编》为例"></a>搭建自定义播客，以《民法典-婚姻家庭编》为例</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>本来我对于播客这个，也只是听个响，也没有研究过背后运行的逻辑。</p><p>经过抓包，发现：</p><p><code>一个播客频道</code>=<code>一个包含每个单集音频地址的XML文件</code></p><p>因此，我们搭建一个播放自己音频的播客，只需要：</p><ul><li>托管音频</li><li>生成XML订阅文件</li><li>托管XML文件</li></ul><h3 id="托管音频"><a href="#托管音频" class="headerlink" title="托管音频"></a>托管音频</h3><h4 id="云托管-amp-本地转发"><a href="#云托管-amp-本地转发" class="headerlink" title="云托管&amp;本地转发"></a>云托管&amp;本地转发</h4><p>一句话原理：利用NAS中Docker挂载阿里云盘，端口转发暴露地址。</p><ol><li><p>网页登录阿里云盘后在控制台输入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">JSON</span>.parse(<span class="built_in">window</span>.localStorage.getItem(<span class="string">&quot;token&quot;</span>))[<span class="string">&quot;refresh_token&quot;</span>];</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ZiGmaX809/ZiGmaX809.github.io/pic/202201041323453.png"></p><p>获取token后留着备用；</p></li><li><p>上传文件至阿里云盘；</p><p>（本地文件先别删，生成XML的时候需要使用）</p><p><img src="https://raw.githubusercontent.com/ZiGmaX809/ZiGmaX809.github.io/pic/202201041348701.png"></p></li><li><p>因为我是斐讯N1挂载1T的硬盘作为简易的NAS使用，如使用群晖等类似操作即可。</p><p>在Docker中挂载阿里云盘，将前面的token填入下面代码，因为要暴露到公网，登录名&amp;密码自行修改；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">    -d --name=webdav-aliyundriver --restart=always -p 8080:8080 \</span><br><span class="line">    -v /etc/localtime:/etc/localtime \</span><br><span class="line">    -v /etc/aliyun-driver/:/etc/aliyun-driver/ \</span><br><span class="line">    -e TZ=&quot;Asia/Shanghai&quot; \</span><br><span class="line">    -e ALIYUNDRIVE_REFRESH_TOKEN=&quot;your_token&quot; \</span><br><span class="line">    -e ALIYUNDRIVE_AUTH_PASSWORD=&quot;admin&quot; \</span><br><span class="line">    -e JAVA_OPTS=&quot;-Xmx1g&quot; zx5253/webdav-aliyundriver</span><br></pre></td></tr></table></figure></li><li><p>设置端口转发；</p><p>我的主路由为华硕AC-86u，因此安装了<code>阿里DDNS</code>和<code>Let&#39;s Encrypt</code>插件，只需要设置端口转发即可通过域名+端口的方式访问内网服务，关于如何进行内网穿透或者端口转发在此不赘。</p><p>外网访问地址如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://admin:admin@example.com:8080/Podcasts/test/test.mp3</span><br></pre></td></tr></table></figure></li></ol><h4 id="本地存放-amp-转发。"><a href="#本地存放-amp-转发。" class="headerlink" title="本地存放&amp;转发。"></a>本地存放&amp;转发。</h4><p>一句话原理：存放于NAS并通过FileBrowser分享，最后通过端口转发暴露地址。</p><ol><li><p>开启FileBrowser服务（OpenWRT自带，其他系统自行搜索安装）</p></li><li><p>上传文件</p></li><li><p>设置文件分享（整体文件夹分享即可）</p><p><img src="https://raw.githubusercontent.com/ZiGmaX809/ZiGmaX809.github.io/pic/202201041605737.png"></p><p>分享文件夹后会有随机码，分享链接格式为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://example.com:4040/share/yeaQs7rf</span><br></pre></td></tr></table></figure><p>直接访问链接为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://example.com:4040/api/public/dl/yeaQs7rf/test.mp3?inline=true</span><br></pre></td></tr></table></figure></li></ol><h3 id="生成XML订阅文件"><a href="#生成XML订阅文件" class="headerlink" title="生成XML订阅文件"></a>生成XML订阅文件</h3><p>关于本地文件命名规则：</p><ul><li>尽可能以下规则命名，这样将会按照顺序生成XML文件，否则以文件名排序，如像法条解读本身文件名中带编号的可不以该规则命名。<ul><li>【00这是一个测试音频.mp3】</li><li>【01这是另一个测试音频.mp3】</li><li>……</li></ul></li></ul><p>在对几个热门频道订阅链接抓包分析后发现XML文件结构基本如下（没保留之前的，就把现成的拿出来比划一下）：</p><p>主要是：</p><ul><li>频道信息<ol><li>频道名称</li><li>频道简介</li><li>频道语言</li><li>频道Logo及Logo名称</li></ol></li><li>单集节目信息<ol><li>单集名称</li><li>单集简介</li><li>单集推送日期</li><li>单集地址、长度、类型（不同后缀音频类型不同，<a href="http://help.dottoro.com/lapuadlp.php">类型参考</a>）</li><li>单集图片</li></ol></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rss</span> <span class="attr">version</span>=<span class="string">&quot;2.0&quot;</span> <span class="attr">xmlns:atom</span>=<span class="string">&quot;http://www.w3.org/2005/Atom&quot;</span> <span class="attr">xmlns:itunes</span>=<span class="string">&quot;http://www.itunes.com/dtds/podcast-1.0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">channel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>民法典之婚姻家庭编<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span>&gt;</span><span class="tag">&lt;/<span class="name">link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>民法典之婚姻家庭编法条解读<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">language</span>&gt;</span>zh-cn<span class="tag">&lt;/<span class="name">language</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span>https://android-artworks.25pp.com/fs08/2021/11/23/9/110_0cc601f3d1b5a8de567f2cfd7868ea57_con_130x130.png<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>民法典之婚姻家庭编<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>婚姻家庭编第1109条<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>婚姻家庭编第1109条<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pubDate</span>&gt;</span>Thu, Dec 30 2021 13:28:28 +0800<span class="tag">&lt;/<span class="name">pubDate</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">enclosure</span> <span class="attr">length</span>=<span class="string">&quot;4141489&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/m4a&quot;</span> <span class="attr">url</span>=<span class="string">&quot;http://admin:admin@192.168.124.25:8080/Podcasts/%E5%A9%9A%E5%A7%BB%E5%AE%B6%E5%BA%AD%E7%BC%96/%E5%A9%9A%E5%A7%BB%E5%AE%B6%E5%BA%AD%E7%BC%96%E7%AC%AC1109%E6%9D%A1.m4a&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">itunes:image</span> <span class="attr">href</span>=<span class="string">&quot;https://android-artworks.25pp.com/fs08/2021/11/23/9/110_0cc601f3d1b5a8de567f2cfd7868ea57_con.png&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>婚姻家庭编第1100条.<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>婚姻家庭编第1100条.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pubDate</span>&gt;</span>Thu, Dec 30 2021 13:28:28 +0800<span class="tag">&lt;/<span class="name">pubDate</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">enclosure</span> <span class="attr">length</span>=<span class="string">&quot;3729089&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/m4a&quot;</span> <span class="attr">url</span>=<span class="string">&quot;http://admin:admin@192.168.124.25:8080/Podcasts/%E5%A9%9A%E5%A7%BB%E5%AE%B6%E5%BA%AD%E7%BC%96/%E5%A9%9A%E5%A7%BB%E5%AE%B6%E5%BA%AD%E7%BC%96%E7%AC%AC1100%E6%9D%A1..m4a&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">itunes:image</span> <span class="attr">href</span>=<span class="string">&quot;https://android-artworks.25pp.com/fs08/2021/11/23/9/110_0cc601f3d1b5a8de567f2cfd7868ea57_con.png&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">channel</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">rss</span>&gt;</span></span><br><span class="line">          </span><br></pre></td></tr></table></figure><p>知道了文档结构，那么我们就可以利用Python，针对存放音频的文件夹进行遍历并逆序生成XML文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment"># encoding:utf-8</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">根据一个给定的XML Schema，使用DOM树的形式从空白文件生成一个XML。</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> xml.dom.minidom <span class="keyword">import</span> Document</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> quote</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment">#————————————————自定义区————————————————#</span></span><br><span class="line"><span class="comment"># 频道名称</span></span><br><span class="line">c_channel_title = <span class="string">&quot;民法典之婚姻家庭编&quot;</span></span><br><span class="line"><span class="comment"># 频道链接</span></span><br><span class="line">c_channel_link = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># 频道简介</span></span><br><span class="line">c_channel_description = <span class="string">&quot;民法典之婚姻家庭编法条解读&quot;</span></span><br><span class="line"><span class="comment"># 频道Logo，可以直接在线找一个，或者自行托管至图床</span></span><br><span class="line">c_channel_image_url = <span class="string">&quot;https://android-artworks.25pp.com/fs08/2021/11/23/9/110_0cc601f3d1b5a8de567f2cfd7868ea57_con_130x130.png&quot;</span></span><br><span class="line">c_channel_language = <span class="string">&quot;zh-cn&quot;</span></span><br><span class="line"><span class="comment"># 与前面image_url不能一致否则不显示</span></span><br><span class="line">c_item_image_href = <span class="string">&quot;https://android-artworks.25pp.com/fs08/2021/11/23/9/110_0cc601f3d1b5a8de567f2cfd7868ea57_con.png&quot;</span></span><br><span class="line"><span class="comment"># 单集音频类型</span></span><br><span class="line">c_item_type = <span class="string">&#x27;audio/m4a&#x27;</span></span><br><span class="line"><span class="comment"># 单集自定义地址前缀，这里测试使用了内网ip</span></span><br><span class="line">c_item_enclosure = <span class="string">&#x27;http://admin:admin@192.168.124.25:8080/Podcasts/&#x27;</span> </span><br><span class="line"><span class="comment"># 单集音频本地存放文件夹地址</span></span><br><span class="line">file_path = <span class="string">&#x27;/Users/zigma/Downloads/婚姻家庭编&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除文件夹下的.DS_Store文件</span></span><br><span class="line">os.system(<span class="string">&#x27;find %s -name .DS_Store | xargs rm -rf&#x27;</span> % (file_path))</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取路径中文件夹名</span></span><br><span class="line">dir_name = os.path.basename(file_path)</span><br><span class="line"></span><br><span class="line">doc = Document()  <span class="comment"># 创建DOM文档对象</span></span><br><span class="line">rss = doc.createElement(<span class="string">&#x27;rss&#x27;</span>)  <span class="comment"># 创建根元素</span></span><br><span class="line">rss.setAttribute(<span class="string">&#x27;version&#x27;</span>, <span class="string">&quot;2.0&quot;</span>)  <span class="comment"># 设置命名空间</span></span><br><span class="line">rss.setAttribute(<span class="string">&#x27;xmlns:itunes&#x27;</span>, <span class="string">&quot;http://www.itunes.com/dtds/podcast-1.0.dtd&quot;</span>)</span><br><span class="line">rss.setAttribute(<span class="string">&#x27;xmlns:atom&#x27;</span>, <span class="string">&quot;http://www.w3.org/2005/Atom&quot;</span>)</span><br><span class="line">doc.appendChild(rss)</span><br><span class="line"><span class="comment">############播客信息################</span></span><br><span class="line">channel = doc.createElement(<span class="string">&#x27;channel&#x27;</span>)</span><br><span class="line">rss.appendChild(channel)</span><br><span class="line"></span><br><span class="line">channel_title = doc.createElement(<span class="string">&#x27;title&#x27;</span>)</span><br><span class="line">channel_title_text = doc.createTextNode(c_channel_title)</span><br><span class="line">channel.appendChild(channel_title)</span><br><span class="line">channel_title.appendChild(channel_title_text)</span><br><span class="line"></span><br><span class="line">channel_link = doc.createElement(<span class="string">&#x27;link&#x27;</span>)</span><br><span class="line">channel_link_text = doc.createTextNode(c_channel_link)</span><br><span class="line">channel.appendChild(channel_link)</span><br><span class="line">channel_link.appendChild(channel_link_text)</span><br><span class="line"></span><br><span class="line">channel_description = doc.createElement(<span class="string">&#x27;description&#x27;</span>)</span><br><span class="line">channel_description_text = doc.createTextNode(c_channel_description)</span><br><span class="line">channel.appendChild(channel_description)</span><br><span class="line">channel_description.appendChild(channel_description_text)</span><br><span class="line"></span><br><span class="line">channel_language = doc.createElement(<span class="string">&#x27;language&#x27;</span>)</span><br><span class="line">channel_language_text = doc.createTextNode(c_channel_language)</span><br><span class="line">channel.appendChild(channel_language)</span><br><span class="line">channel_language.appendChild(channel_language_text)</span><br><span class="line"></span><br><span class="line">channel_image = doc.createElement(<span class="string">&#x27;image&#x27;</span>)</span><br><span class="line">channel.appendChild(channel_image)</span><br><span class="line"></span><br><span class="line">channel_url = doc.createElement(<span class="string">&#x27;url&#x27;</span>)</span><br><span class="line">channel_url_text = doc.createTextNode(c_channel_image_url)</span><br><span class="line">channel_image.appendChild(channel_url)</span><br><span class="line">channel_url.appendChild(channel_url_text)</span><br><span class="line"></span><br><span class="line">channel_image_title = doc.createElement(<span class="string">&#x27;title&#x27;</span>)</span><br><span class="line">channel_image_title_text = doc.createTextNode(c_channel_title)</span><br><span class="line">channel_image.appendChild(channel_image_title)</span><br><span class="line">channel_image_title.appendChild(channel_image_title_text)</span><br><span class="line"></span><br><span class="line"><span class="comment">############节目信息################</span></span><br><span class="line">file_list = <span class="built_in">sorted</span>(os.listdir(file_path))  <span class="comment"># 文件名按字母排序</span></span><br><span class="line">file_nums = <span class="built_in">len</span>(file_list)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(file_nums, <span class="number">0</span>, -<span class="number">1</span>):</span><br><span class="line">    file_size = os.path.getsize(file_path + <span class="string">&#x27;/&#x27;</span> + file_list[i-<span class="number">1</span>])</span><br><span class="line">    file_name = re.sub(<span class="string">r&#x27;^[0-9]+|\.[a-zA-Z0-9]+$&#x27;</span>, <span class="string">&quot;&quot;</span>,</span><br><span class="line">                       file_list[i-<span class="number">1</span>])  <span class="comment"># 利用正则表达式替换掉开始序号及后缀</span></span><br><span class="line">    <span class="comment">#print(file_list[i-1] + str(file_size))</span></span><br><span class="line"></span><br><span class="line">    item = doc.createElement(<span class="string">&#x27;item&#x27;</span>)</span><br><span class="line">    channel.appendChild(item)</span><br><span class="line"></span><br><span class="line">    item_title = doc.createElement(<span class="string">&#x27;title&#x27;</span>)</span><br><span class="line">    item_title_text = doc.createTextNode(file_name)</span><br><span class="line">    item.appendChild(item_title)</span><br><span class="line">    item_title.appendChild(item_title_text)</span><br><span class="line"></span><br><span class="line">    item_description = doc.createElement(<span class="string">&#x27;description&#x27;</span>)</span><br><span class="line">    item_description_text = doc.createTextNode(file_name)</span><br><span class="line">    item.appendChild(item_description)</span><br><span class="line">    item_description.appendChild(item_description_text)</span><br><span class="line"></span><br><span class="line">    item_pubDate = doc.createElement(<span class="string">&#x27;pubDate&#x27;</span>)</span><br><span class="line">    item_pubDate_text = doc.createTextNode(time.strftime(</span><br><span class="line">        <span class="string">&quot;%a&quot;</span>+<span class="string">&quot;,&quot;</span> + <span class="string">&quot; %b %d %Y %H:%M:%S &quot;</span> + <span class="string">&quot;+0800&quot;</span>, time.localtime()))</span><br><span class="line">    item.appendChild(item_pubDate)</span><br><span class="line">    item_pubDate.appendChild(item_pubDate_text)</span><br><span class="line"></span><br><span class="line">    item_enclosure = doc.createElement(<span class="string">&#x27;enclosure&#x27;</span>)</span><br><span class="line">    item_enclosure.setAttribute(</span><br><span class="line">        <span class="string">&#x27;url&#x27;</span>, c_item_enclosure + quote(dir_name + <span class="string">&quot;/&quot;</span> + file_list[i-<span class="number">1</span>]))</span><br><span class="line">    item_enclosure.setAttribute(<span class="string">&#x27;length&#x27;</span>, <span class="built_in">str</span>(file_size))</span><br><span class="line">    item_enclosure.setAttribute(<span class="string">&#x27;type&#x27;</span>, c_item_type)</span><br><span class="line">    item.appendChild(item_enclosure)</span><br><span class="line"></span><br><span class="line">    item_itunes_image = doc.createElement(<span class="string">&#x27;itunes:image&#x27;</span>)</span><br><span class="line">    item_itunes_image.setAttribute(<span class="string">&#x27;href&#x27;</span>, c_item_image_href)</span><br><span class="line">    item.appendChild(item_itunes_image)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将DOM对象doc写入文件</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;tel.xml&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line"><span class="comment">#f.write(doc.toprettyxml(indent = &#x27;\t&#x27;, newl = &#x27;\n&#x27;, encoding = &#x27;utf-8&#x27;))</span></span><br><span class="line">doc.writexml(f, indent=<span class="string">&#x27;\t&#x27;</span>, newl=<span class="string">&#x27;\n&#x27;</span>, addindent=<span class="string">&#x27;\t&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>运行后即可在该Python脚本目录生成<code>tel.xml</code>文件。</p><h3 id="托管XML文件"><a href="#托管XML文件" class="headerlink" title="托管XML文件"></a>托管XML文件</h3><p>文件托管就比较简单了，直接丢到Gitlab的私人库即可。</p><p>关于Gitlab私人库的RAW地址参考如下规则：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://gitlab.com/api/v4/projects/[projectid]/repository/files/[Filepath]%2F[Filename.rss]/raw?ref=[Branch]&amp;private_token=[privatetoken]</span><br></pre></td></tr></table></figure><p>之后在Moon FM或者其他App订阅RSS链接即可（注意在<code>url encode</code>后使用）。</p><p>最后成品如图：</p><p><img src="https://raw.githubusercontent.com/ZiGmaX809/ZiGmaX809.github.io/pic/202201041424497.PNG"></p><p><img src="https://raw.githubusercontent.com/ZiGmaX809/ZiGmaX809.github.io/pic/202201041518452.PNG"></p><h2 id="自定义电台列表"><a href="#自定义电台列表" class="headerlink" title="自定义电台列表"></a>自定义电台列表</h2><p>因涉及不可描述，详见<a href="https://zigma.cc/2022/01/04/%E7%8E%A9%E8%BD%ACMoon%20FM%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E7%94%B5%E5%8F%B0/">我的博客</a></p><h2 id="Docker搭建同步数据库"><a href="#Docker搭建同步数据库" class="headerlink" title="Docker搭建同步数据库"></a>Docker搭建同步数据库</h2><p>最后，把同步数据库也顺便搭建一下吧。</p><ol><li><p>在Docker中安装CouchDB数据库，因需在公网暴露注意自定义用户名&amp;密码；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">-p 5984:5984 \</span><br><span class="line">-e COUCHDB_USER=admin \</span><br><span class="line">-e COUCHDB_PASSWORD=password \</span><br><span class="line">-d couchdb</span><br></pre></td></tr></table></figure></li><li><p>安装完后通过<code>http://192.168.2.2:5984/_utils</code> 利用以上用户名&amp;密码测试登录；</p></li><li><p>在<code>Config - Main config</code>中设置 <code>couch_peruser</code> 模式；</p></li><li><p>可能<code>couch_peruser</code>选项都没有，所以需要点击右上角<code>Add Option</code>依次添加：</p></li></ol><table><thead><tr><th><strong>Section</strong></th><th><strong>Option</strong></th><th>Value</th></tr></thead><tbody><tr><td>couch_peruser</td><td>database_prefix</td><td>userdb-</td></tr><tr><td>couch_peruser</td><td>delete_dbs</td><td>false</td></tr><tr><td>couch_peruser</td><td>enable</td><td>true</td></tr></tbody></table><ol start="5"><li><p>添加<code>_users</code>数据库；</p><figure class="highlight shell"><figcaption><span>l</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT http://admin:password@192.168.2.2:5984/_users \</span><br><span class="line">     -H &quot;Accept: application/json&quot; \</span><br><span class="line">     -H &quot;Content-Type: application/json&quot; \</span><br></pre></td></tr></table></figure><p>如果卡住，可以输入exit后查看主页有无<code>_users</code>数据库生成，没有就重复第五步，如再卡住，等待后再exit；</p></li><li><p>在<code>_users</code>中创建用户test，需要自定的将下面test的数据库名称、用户名、密码自行修改；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT http://admin:password@192.168.2.2:5984/moonfm/org.couchdb.user:test \</span><br><span class="line">     -H &quot;Accept: application/json&quot; \</span><br><span class="line">     -H &quot;Content-Type: application/json&quot; \</span><br><span class="line">     -d &#x27;&#123;&quot;name&quot;: &quot;test&quot;, &quot;password&quot;: &quot;test1234&quot;, &quot;roles&quot;: [], &quot;type&quot;: &quot;user&quot;&#125;&#x27;</span><br></pre></td></tr></table></figure></li><li><p>可以看到生成了一个<code>userdb-xxxxxxxxxx</code> 的数据库l</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://test:test1234@192.168.2.2:5984/userdb-xxxxxxxxxx</span><br></pre></td></tr></table></figure><p>以上即为同步地址</p></li><li><p>设置端口转发后即可外网访问；</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;提出需求&quot;&gt;&lt;a href=&quot;#提出需求&quot; class=&quot;headerlink&quot; title=&quot;提出需求&quot;&gt;&lt;/a&gt;提出需求&lt;/h2&gt;&lt;p&gt;不知道什么时候开始喜欢在上下班通勤路上听听播客，大约是日谈公园入的坑，个人比较喜欢的一些播客节目有：&lt;/p&gt;
&lt;ul&gt;
&lt;l</summary>
      
    
    
    
    
    <category term="瞎折腾" scheme="http://www.zigma.cc/tags/%E7%9E%8E%E6%8A%98%E8%85%BE/"/>
    
  </entry>
  
  <entry>
    <title>Ai练手</title>
    <link href="http://www.zigma.cc/2022/01/04/Ai%E7%BB%83%E6%89%8B/"/>
    <id>http://www.zigma.cc/2022/01/04/Ai%E7%BB%83%E6%89%8B/</id>
    <published>2022-01-04T04:17:38.000Z</published>
    <updated>2022-01-04T07:48:30.085Z</updated>
    
    <content type="html"><![CDATA[<p>最近在学习Electron，顺手仿照Anki第三方的Logo画了个应用的图标，归档一下。</p><img src="https://raw.githubusercontent.com/ZiGmaX809/ZiGmaX809.github.io/pic/202201041220864.png"  />]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近在学习Electron，顺手仿照Anki第三方的Logo画了个应用的图标，归档一下。&lt;/p&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/ZiGmaX809/ZiGmaX809.github.io/pic/2022010412</summary>
      
    
    
    
    
    <category term="Adobe Illustrator" scheme="http://www.zigma.cc/tags/Adobe-Illustrator/"/>
    
  </entry>
  
  <entry>
    <title>玩转Moon FM之自定义电台</title>
    <link href="http://www.zigma.cc/2022/01/04/%E7%8E%A9%E8%BD%ACMoon%20FM%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E7%94%B5%E5%8F%B0/"/>
    <id>http://www.zigma.cc/2022/01/04/%E7%8E%A9%E8%BD%ACMoon%20FM%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E7%94%B5%E5%8F%B0/</id>
    <published>2022-01-04T02:53:02.000Z</published>
    <updated>2022-01-05T06:26:03.442Z</updated>
    
    <content type="html"><![CDATA[<h2 id="提出需求"><a href="#提出需求" class="headerlink" title="提出需求"></a>提出需求</h2><p>之前利用自建播客成功的在Moon FM中播放私人音频，后来发现Moon FM还可以听电台，但是国内电台并不全。</p><p>所以我们可以稍微改造一下让他支持我们自定义电台。</p><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>Moon FM中关于电台的收听除了发现页面最下面少的可怜的推荐位以外就是搜索了。</p><p>因为Moon FM官方地址被墙，所以我们需要利用Quantumult X来进行抓包。</p><p>我们找一个基本没有电台会用的关键词<code>custom</code>进行搜索，作为基础json文件。</p><p><img src="https://raw.githubusercontent.com/ZiGmaX809/ZiGmaX809.github.io/pic/202201041447169.PNG"></p><p>搜索api 的地址为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://backend.moon.fm/api/search?search_k=custom&amp;search_type=radio&amp;page=1</span><br></pre></td></tr></table></figure><p>返回json文件为：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;search_type&quot;</span> : <span class="string">&quot;radio&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;data&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;last_page_url&quot;</span> : <span class="string">&quot;https://backend.moon.fm/api/search?page=1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;prev_page_url&quot;</span> : <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">&quot;from&quot;</span> : <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;path&quot;</span> : <span class="string">&quot;https://backend.moon.fm/api/search&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;first_page_url&quot;</span> : <span class="string">&quot;https://backend.moon.fm/api/search?page=1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;last_page&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;next_page_url&quot;</span> : <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">&quot;data&quot;</span> : [],</span><br><span class="line">    <span class="attr">&quot;current_page&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;per_page&quot;</span> : <span class="number">20</span>,</span><br><span class="line">    <span class="attr">&quot;to&quot;</span> : <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>同理我们搜索一个有返回结果的电台，例如音乐之声：</p><p><img src="https://raw.githubusercontent.com/ZiGmaX809/ZiGmaX809.github.io/pic/202201041447820.PNG"></p><p>返回json文件：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;search_type&quot;</span> : <span class="string">&quot;radio&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;data&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;last_page_url&quot;</span> : <span class="string">&quot;https://backend.moon.fm/api/search?page=1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;prev_page_url&quot;</span> : <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">&quot;from&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;path&quot;</span> : <span class="string">&quot;https://backend.moon.fm/api/search&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;first_page_url&quot;</span> : <span class="string">&quot;https://backend.moon.fm/api/search?page=1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;last_page&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;next_page_url&quot;</span> : <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">&quot;data&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span> : <span class="number">413131</span>,</span><br><span class="line">        <span class="attr">&quot;countryName&quot;</span> : <span class="string">&quot;China&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;image_url&quot;</span> : <span class="string">&quot;https://moon.fm/images/radio_logo/29c8456d-0f0b-44bc-c275-c062e5d259ca.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;CNR 音乐之声 Music Radio&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;streamURL&quot;</span> : <span class="string">&quot;http://ngcdn003.cnr.cn/live/yyzs/index.m3u8&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;hidden&quot;</span> : <span class="number">0</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;current_page&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;per_page&quot;</span> : <span class="number">20</span>,</span><br><span class="line">    <span class="attr">&quot;to&quot;</span> : <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>返回结果经过分析发现</p><ul><li>主要将搜索结果保存在data中<ul><li>返回列表——data</li><li>搜索结果总数——total</li><li>每页数量——per_page</li><li>电台指向的就是一个m3u8地址</li></ul></li></ul><p>因此，如果我们自定义电台的数量少于20个，那么就无需考虑翻页以及next_page_url等问题。</p><h3 id="篡改请求体"><a href="#篡改请求体" class="headerlink" title="篡改请求体"></a>篡改请求体</h3><h4 id="1-拦截请求"><a href="#1-拦截请求" class="headerlink" title="1.拦截请求"></a>1.拦截请求</h4><p>拦截请求体我们需要先利用正则命中请求链接。</p><p>利用在线正则表达式工具，我们可以得到命中的正则表达式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">^https\:\/\/backend\.moon\.fm\/api\/search\?search\_k\=custom\&amp;search\_type\=radio</span><br><span class="line"></span><br><span class="line">// 原文本：https://backend.moon.fm/api/search?search_k=custom&amp;search_type=radio&amp;page=1</span><br><span class="line">// 命中：https://backend.moon.fm/api/search?search_k=custom&amp;search_type=radio</span><br></pre></td></tr></table></figure><p>那么我们需要在QuantumultX的conf文件中进行本地重写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[rewrite_local]</span><br><span class="line">^https\:\/\/backend\.moon\.fm\/api\/search\?search\_k\=custom\&amp;search\_type\=radio url script-response-body test.js</span><br></pre></td></tr></table></figure><h4 id="2-篡改请求体"><a href="#2-篡改请求体" class="headerlink" title="2.篡改请求体"></a>2.篡改请求体</h4><h5 id="准备工作："><a href="#准备工作：" class="headerlink" title="准备工作："></a>准备工作：</h5><ul><li>打开Quantumult X的iCloud开关</li><li>在Mac的<code>iCloud云盘/Quantumult X/Scripts</code>文件夹中创建test.js</li></ul><p>这样利用Mac中的VSCode编辑test.js后保存即可同步至手机进行调试。</p><h5 id="脚本编写："><a href="#脚本编写：" class="headerlink" title="脚本编写："></a>脚本编写：</h5><p>首先我们需要先读取拦截的response请求，然后将修改后的请求返还给App。</p><p>首先，先把所有数据修改后进行返还。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = <span class="built_in">JSON</span>.parse($response.body || <span class="string">&#x27;&#123;&#125;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">c_body = &#123;</span><br><span class="line">    <span class="string">&quot;data&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;current_page&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&quot;data&quot;</span>: [&#123;</span><br><span class="line">            <span class="string">&quot;id&quot;</span>: <span class="number">446945</span>,</span><br><span class="line">            <span class="string">&quot;streamURL&quot;</span>: <span class="string">&quot;http://satellitepull.cnr.cn/live/wxzjjtgb/playlist.m3u8&quot;</span>,</span><br><span class="line">            <span class="string">&quot;name&quot;</span>: <span class="string">&quot;浙江交通之声&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_url&quot;</span>: <span class="string">&quot;https://gitee.com/radioer/transparentlogo/raw/master/generalradio/%E6%B5%99%E6%B1%9F%E4%BA%A4%E9%80%9A%E4%B9%8B%E5%A3%B0.png&quot;</span>,</span><br><span class="line">            <span class="string">&quot;hidden&quot;</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="string">&quot;countryName&quot;</span>: <span class="string">&quot;China&quot;</span></span><br><span class="line">        &#125;,&#123;</span><br><span class="line">            <span class="string">&quot;id&quot;</span>: <span class="number">446945</span>,</span><br><span class="line">            <span class="string">&quot;streamURL&quot;</span>: <span class="string">&quot;http://satellitepull.cnr.cn/live/wxzjzs/playlist.m3u8&quot;</span>,</span><br><span class="line">            <span class="string">&quot;name&quot;</span>: <span class="string">&quot;浙江之声&quot;</span>,</span><br><span class="line">            <span class="string">&quot;image_url&quot;</span>: <span class="string">&quot;https://gitee.com/radioer/transparentlogo/raw/master/generalradio/%E6%B5%99%E6%B1%9F%E4%B9%8B%E5%A3%B0.png&quot;</span>,</span><br><span class="line">            <span class="string">&quot;hidden&quot;</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="string">&quot;countryName&quot;</span>: <span class="string">&quot;China&quot;</span></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="string">&quot;first_page_url&quot;</span>: <span class="string">&quot;https://backend.moon.fm/api/search?page=1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;from&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&quot;last_page&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&quot;last_page_url&quot;</span>: <span class="string">&quot;https://backend.moon.fm/api/search?page=1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;next_page_url&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="string">&quot;path&quot;</span>: <span class="string">&quot;https://backend.moon.fm/api/search&quot;</span>,</span><br><span class="line">        <span class="string">&quot;per_page&quot;</span>: <span class="number">20</span>,</span><br><span class="line">        <span class="string">&quot;prev_page_url&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="string">&quot;to&quot;</span>: <span class="number">15</span>,</span><br><span class="line">        <span class="string">&quot;total&quot;</span>: <span class="number">15</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;search_type&quot;</span>: <span class="string">&quot;radio&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$done(&#123; <span class="attr">body</span>: <span class="built_in">JSON</span>.stringify(c_body) &#125;);</span><br></pre></td></tr></table></figure><p>在Moon FM中搜索<code>custom</code>，可以看到我们添加的两个电台，测试通过。</p><p>但是代码写成上面这样并不优雅，我们可以在线托管需要的电台json，然后让篡改脚本请求并返还，这样不管是电台管理还是可读性上面都比较舒服了。</p><h4 id="3-优化代码"><a href="#3-优化代码" class="headerlink" title="3.优化代码"></a>3.优化代码</h4><p>首先建立远程json文件，相关电台m3u8地址网上自行搜索或者去抓取喜马拉雅等App的地址。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;list&quot;</span>: [</span><br><span class="line">     &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;浙江之声&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://satellitepull.cnr.cn/live/wxzjzs/playlist.m3u8&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;image&quot;</span>: <span class="string">&quot;https://gitee.com/radioer/transparentlogo/raw/master/generalradio/浙江之声.png&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;浙江交通之声&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://satellitepull.cnr.cn/live/wxzjjtgb/playlist.m3u8&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;image&quot;</span>: <span class="string">&quot;https://gitee.com/radioer/transparentlogo/raw/master/generalradio/浙江交通之声.png&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;浙江音乐调频·动听968&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://satellitepull.cnr.cn/live/wxzj968/playlist.m3u8&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;image&quot;</span>: <span class="string">&quot;https://gitee.com/radioer/transparentlogo/raw/master/musicradio/动听968.png&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;浙江旅游之声&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://satellitepull.cnr.cn/live/wxzj1045/playlist.m3u8&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;image&quot;</span>: <span class="string">&quot;https://gitee.com/radioer/transparentlogo/raw/master/generalradio/浙江旅游之声.png&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;浙江民生资讯广播&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://satellitepull.cnr.cn/live/wxzjmsgb/playlist.m3u8&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;image&quot;</span>: <span class="string">&quot;https://gitee.com/radioer/transparentlogo/raw/master/generalradio/浙江民生广播.png&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;杭州交通经济广播&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://livewsa.ximalaya.com/radio-first-page-app/live/632/64.m3u8&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;image&quot;</span>: <span class="string">&quot;http://imagev2.xmcdn.com/group74/M05/9D/83/wKgO0l6C9I6iJSG0AACQznxf1WY094.png&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;杭州西湖之声&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://livewsa.ximalaya.com/radio-first-page-app/live/635/64.m3u8&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;image&quot;</span>: <span class="string">&quot;http://imagev2.xmcdn.com/group78/M02/8F/11/wKgO4F6C9LaDB0RYAAB_O87sIKU487.png&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后改造篡改脚本，通过请求远程json后添加至response-body即可。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//final.js</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/************</span></span><br><span class="line"><span class="comment">通过篡改搜索结果来自定义收听Radio</span></span><br><span class="line"><span class="comment">************/</span></span><br><span class="line"><span class="keyword">const</span> obj = <span class="built_in">JSON</span>.parse($response.body || <span class="string">&#x27;&#123;&#125;&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> myRequest = &#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`https://raw.githubusercontent.com/ZiGmaX809/PrivateRules/master/QuantumultX/Scripts/CustomRadio/RadioList.json`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">`GET`</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$task.fetch(myRequest).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> new_data = []</span><br><span class="line">    <span class="keyword">let</span> data = <span class="built_in">JSON</span>.parse(response.body).list;</span><br><span class="line">    <span class="keyword">let</span> id = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    data.forEach(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">        new_data.push(&#123;</span><br><span class="line">            <span class="string">&quot;id&quot;</span>: id,</span><br><span class="line">            <span class="string">&quot;streamURL&quot;</span>: item.url,</span><br><span class="line">            <span class="string">&quot;name&quot;</span>: item.name,</span><br><span class="line">            <span class="string">&quot;image_url&quot;</span>: item.image,</span><br><span class="line">            <span class="string">&quot;hidden&quot;</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="string">&quot;countryName&quot;</span>: <span class="string">&quot;China&quot;</span></span><br><span class="line">        &#125;)</span><br><span class="line">        id++;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    obj.data.data = new_data;</span><br><span class="line">    $done(&#123;<span class="attr">body</span> :<span class="built_in">JSON</span>.stringify(obj)&#125;);</span><br><span class="line">&#125;, <span class="function"><span class="params">reason</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(reason.error);</span><br><span class="line">    $done();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="4-将脚本修改为资源列表（重写），以便自由开关该功能"><a href="#4-将脚本修改为资源列表（重写），以便自由开关该功能" class="headerlink" title="4.将脚本修改为资源列表（重写），以便自由开关该功能"></a>4.将脚本修改为资源列表（重写），以便自由开关该功能</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//final.conf</span></span><br><span class="line"></span><br><span class="line">hostname = backend.moon.fm</span><br><span class="line"></span><br><span class="line">^https\:\/\/backend\.moon\.fm\/api\/search\?search\_k\=custom\&amp;search\_type\=radio url script-response-body https:<span class="comment">//raw.githubusercontent.com/ZiGmaX809/PrivateRules/master/QuantumultX/Scripts/CustomRadio/final.js</span></span><br></pre></td></tr></table></figure><p>并且修改Quantumult X的conf文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[rewrite_remote]</span><br><span class="line"><span class="attr">https</span>:<span class="comment">//raw.githubusercontent.com/ZiGmaX809/PrivateRules/master/QuantumultX/Scripts/CustomRadio/final.conf, tag=自定义电台, update-interval=86400, opt-parser=false, enabled=true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//删掉本地读写</span></span><br><span class="line">[rewrite_local]</span><br><span class="line">^https\:\/\/backend\.moon\.fm\/api\/search\?search\_k\=custom\&amp;search\_type\=radio url script-response-body test.js</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ZiGmaX809/ZiGmaX809.github.io/pic/202201041518044.PNG"></p><p><img src="https://raw.githubusercontent.com/ZiGmaX809/ZiGmaX809.github.io/pic/202201041518599.PNG"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;提出需求&quot;&gt;&lt;a href=&quot;#提出需求&quot; class=&quot;headerlink&quot; title=&quot;提出需求&quot;&gt;&lt;/a&gt;提出需求&lt;/h2&gt;&lt;p&gt;之前利用自建播客成功的在Moon FM中播放私人音频，后来发现Moon FM还可以听电台，但是国内电台并不全。&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    
    <category term="Quantumult X" scheme="http://www.zigma.cc/tags/Quantumult-X/"/>
    
  </entry>
  
  <entry>
    <title>Clash For Merlin记录</title>
    <link href="http://www.zigma.cc/2020/05/09/Clash%20For%20Merlin%E8%AE%B0%E5%BD%95/"/>
    <id>http://www.zigma.cc/2020/05/09/Clash%20For%20Merlin%E8%AE%B0%E5%BD%95/</id>
    <published>2020-05-09T12:19:34.000Z</published>
    <updated>2022-01-04T03:11:35.511Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Clash-For-Merlin"><a href="#Clash-For-Merlin" class="headerlink" title="Clash For Merlin"></a>Clash For Merlin</h1><blockquote><p>设备：华硕AC-86U</p><p>固件：KoolShare改版Merlin 384.16</p><p>Clash版本：0.19</p><p>1.0版 可以和UU加速器共存，并且Switch裸连可以达到B（根据当前网络决定） </p><p>2.0版 比较满意的版本，可以与UU加速器共存，Switch裸连无异常，王者荣耀等游戏的延迟保持在30ms以下；</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前尝试使用KOP-XIAO的<a href="https://github.com/KOP-XIAO/Clash-Merlin">Clash-Merlin</a>在AC86U上安装，但是他的教程相对比较简单，并且有很多端口进行了自定义，在尝试使用透明代理过程中走了不少弯路，因此在此记录自己折腾的过程。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li>Win系统下——Winscp和Xshell或者同类软件；Mac下——Termius或者同类软件。</li><li>利用<code>uname -a</code>命令查看路由器架构，AC86U为armV8。</li><li>在<a href="https://github.com/Dreamacro/clash">Clash项目地址</a>中下载与路由器架构对应的最新Clash文件，解压后重命名为<code>clash</code>。</li><li>Country.mmdb文件，虽然会在运行Clash时自动下载，但是速度不敢恭维，建议先行下载。</li><li>config.yaml配置文件，根据自己的机场或者VPS设置，如果可行可以在Gitlab利用私有Token实现托管（下面会讲）。</li></ol><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li><p>利用ssh连接路由器，利用以下命令创建文件夹，并赋予执行权限；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /jffs/clash/</span><br><span class="line">chmod +x /jffs/clash/</span><br></pre></td></tr></table></figure></li><li><p>Win系统下直接利用Winscp将上述clash、Country.mmdb、config.yaml上传到<code>/jffs/clash/</code>文件夹内；</p><p>Mac系统下可以利用以下命令分别上传；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp *本地文件路径* *路由器登陆用户名*@*路由器地址*:/jffs/clash/</span><br></pre></td></tr></table></figure><ul><li>使用时，省略*。</li></ul></li><li><p>赋予clash文件执行权限；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /jffs/clash/clash</span><br></pre></td></tr></table></figure></li><li><p>测试运行；</p><figure class="highlight sh"><figcaption><span>ee</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/jffs/clash/clash -d /jffs/clash/</span><br></pre></td></tr></table></figure><p>如果配置无误，可以看到Clash开始跑并输出log。</p></li></ol><h2 id="透明代理"><a href="#透明代理" class="headerlink" title="透明代理"></a>透明代理</h2><h3 id="透明代理下的config-yaml配置"><a href="#透明代理下的config-yaml配置" class="headerlink" title="透明代理下的config.yaml配置"></a>透明代理下的config.yaml配置</h3><p>Merlin直接跑Clash相对于OpenClash和KoolClash无法自动更新托管配置。</p><p>所以我们可以将config.yaml文件存放在Gitlab的私有库中，然后利用脚本进行更新，当然也可以增加定时任务进行定时更新。</p><h5 id="Gitlab的私有库RAW文件规则（Github不支持私有库拉取RAW）"><a href="#Gitlab的私有库RAW文件规则（Github不支持私有库拉取RAW）" class="headerlink" title="Gitlab的私有库RAW文件规则（Github不支持私有库拉取RAW）"></a>Gitlab的私有库RAW文件规则（Github不支持私有库拉取RAW）</h5><p><em>以下带【】部分为需要自己填写项</em></p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://gitlab.com/api/v4/projects/【Project ID】/repository/files/【config.yaml】/raw?ref=master&amp;private_token=【私有Token】</span><br></pre></td></tr></table></figure></blockquote><p>Project ID：可在以下位置找到。</p><h1 align="left"><img src="https://raw.githubusercontent.com/ZiGmaX809/Clash-For-Merlin/master/Project ID.png" alt="Project ID" width="200"></h1><p>config.yaml：无需变更名称，直接在仓库根目录创建，否则下载下来还需要重命名；</p><p>私有Token：需要自己申请Token。</p><h3 id="配置文件编写"><a href="#配置文件编写" class="headerlink" title="配置文件编写"></a>配置文件编写</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">7890</span>  <span class="comment">#默认http代理端口</span></span><br><span class="line"><span class="attr">socks-port:</span> <span class="number">7891</span>  <span class="comment">#默认socks代理端口</span></span><br><span class="line"><span class="attr">redir-port:</span> <span class="number">7892</span>  <span class="comment">#默认redir端口</span></span><br><span class="line"><span class="attr">allow-lan:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">mode:</span> <span class="string">Rule</span></span><br><span class="line"><span class="attr">log-level:</span> <span class="string">info</span></span><br><span class="line"><span class="attr">external-controller:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">:9090</span>  <span class="comment">#控制台端口</span></span><br><span class="line"><span class="attr">experimental:</span></span><br><span class="line">  <span class="attr">interface-name:</span> <span class="string">eth0</span>  <span class="comment">#（尝试）TUN模式下，流量出口，路由器为WAN口</span></span><br><span class="line">  <span class="attr">ignore-resolve-fail:</span> <span class="literal">true</span>  <span class="comment">#忽略DNS解析失败</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">dns:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">ipv6:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">listen:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">:55</span>  <span class="comment">#监听路由器55端口</span></span><br><span class="line">  <span class="attr">enhanced-mode:</span> <span class="string">fake-ip</span></span><br><span class="line">  <span class="attr">fake-ip-range:</span> <span class="number">198.18</span><span class="number">.0</span><span class="number">.1</span><span class="string">/16</span></span><br><span class="line">  <span class="comment">#enhanced-mode: redir-host</span></span><br><span class="line">  <span class="attr">nameserver:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">114.114</span><span class="number">.114</span><span class="number">.114</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">223.5</span><span class="number">.5</span><span class="number">.5</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tls://dns.rubyfish.cn:853</span></span><br><span class="line">  <span class="attr">fallback:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">114.114</span><span class="number">.114</span><span class="number">.114</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tls://dns.rubyfish.cn:853</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tun:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment">#（尝试）TUN模式</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">proxy-provider:</span> <span class="comment">#使用proxy-provider对不同的规则进行订阅，以Dler为例</span></span><br><span class="line">  <span class="attr">Dler:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Dler.yaml</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://dler.cloud/subscribe/token?protocols=ss&amp;list=clash&amp;lv=3&amp;noarea=cn</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">3600</span></span><br><span class="line">    <span class="attr">health-check:</span></span><br><span class="line">        <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">http://www.gstatic.com/generate_204</span></span><br><span class="line">        <span class="attr">interval:</span> <span class="number">300</span></span><br><span class="line">   </span><br><span class="line">  <span class="string">...</span></span><br><span class="line">        </span><br><span class="line"><span class="attr">Proxy Group:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Auto</span> <span class="bullet">-</span> <span class="string">UrlTest</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">url-test</span></span><br><span class="line">    <span class="attr">use:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">Dler</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">http://www.gstatic.com/generate_204</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="string">&quot;1800&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Proxy</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">select</span></span><br><span class="line">    <span class="attr">use:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">Dler</span></span><br><span class="line">    <span class="attr">proxies:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">Auto</span> <span class="bullet">-</span> <span class="string">UrlTest</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DIRECT</span></span><br><span class="line"></span><br><span class="line">  <span class="string">...</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Rule:</span></span><br><span class="line">  <span class="string">...</span></span><br></pre></td></tr></table></figure><h3 id="重启Clash脚本"><a href="#重启Clash脚本" class="headerlink" title="重启Clash脚本"></a>重启Clash脚本</h3><p>创建重启Clash脚本并赋予执行权限；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">touch /jffs/clash/restart.sh</span><br><span class="line">chmod +x /jffs/clash/restart.sh</span><br><span class="line">vi /jffs/clash/restart.sh</span><br></pre></td></tr></table></figure><p>打开后输入以下内容；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if $(pidof clash) &gt; /dev/null; then</span><br><span class="line">kill $(pidof clash)</span><br><span class="line">fi</span><br><span class="line">start-stop-daemon -S -b -x /jffs/clash/clash -m -p /tmp/clash.pid -- -d /jffs/clash/</span><br></pre></td></tr></table></figure><p>后续直接运行<code>/jffs/clash/restart.sh</code>即可重启Clash。</p><h3 id="更新config-yaml脚本"><a href="#更新config-yaml脚本" class="headerlink" title="更新config.yaml脚本"></a>更新config.yaml脚本</h3><p>创建更新config.yaml脚本并赋予执行权限；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">touch /jffs/clash/update.sh</span><br><span class="line">chmod +x /jffs/clash/update.sh</span><br><span class="line">vi /jffs/clash/update.sh</span><br></pre></td></tr></table></figure><p>打开后输入以下内容；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -O /jffs/clash/config.yaml &#x27;https://gitlab.com/api/v4/projects/【Project ID】/repository/files/【config.yaml】/raw?ref=master&amp;private_token=【私有Token】&#x27;</span><br><span class="line">/bin/sh /jffs/clash/restart.sh</span><br></pre></td></tr></table></figure><p>即为你Gitlab托管地址。</p><p>后续直接运行<code>/jffs/clash/update.sh</code>即可更新config.yaml配置文件。</p><h3 id="iptables规则"><a href="#iptables规则" class="headerlink" title="iptables规则"></a>iptables规则</h3><h4 id="常规规则"><a href="#常规规则" class="headerlink" title="常规规则"></a>常规规则</h4><p>新建sh脚本以自动添加iptables规则，并赋予执行权限，并添加规则；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">touch /jffs/clash/clash-iptable.sh</span><br><span class="line">chmod +x /jffs/clash/clash-iptable.sh</span><br><span class="line">vi /jffs/clash/clash-iptable.sh</span><br></pre></td></tr></table></figure><p>添加</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">排除ssh端口</span></span><br><span class="line">iptables -t nat -A PREROUTING -p tcp --dport 22 -j ACCEPT</span><br><span class="line"><span class="meta">#</span><span class="bash">在nat表中首行添加排除来源为192.168.2.65规则（尚在尝试）</span></span><br><span class="line">iptables -t nat -I PREROUTING -s 192.168.2.65/32 -j RETURN</span><br><span class="line"><span class="meta">#</span><span class="bash">新建名为CLASH的CHAIN</span></span><br><span class="line">iptables -t nat -N CLASH</span><br><span class="line"><span class="meta">#</span><span class="bash">在CLASH的CHAIN中末行添加排除去向为192.168.0.0/16网段规则</span></span><br><span class="line">iptables -t nat -A CLASH -d 192.168.0.0/16 -j RETURN </span><br><span class="line"><span class="meta">#</span><span class="bash">在CLASH的CHAIN中末行添加转发所有tcp数据至7892端口</span></span><br><span class="line">iptables -t nat -A CLASH -p tcp -j REDIRECT --to-ports 7892</span><br><span class="line"><span class="meta">#</span><span class="bash">在nat表中添加所有流量转向CLASH的CHAIN</span></span><br><span class="line">iptables -t nat -A PREROUTING -p tcp -j CLASH</span><br></pre></td></tr></table></figure><p>其中<code>iptables -t nat -I PREROUTING -s 192.168.2.65/32 -j RETURN</code>是跳过<code>192.168.2.65</code>IP，因为这是Switch的地址，最近在玩动物之森，需要用到UU加速器。（该功能尚在尝试阶段）</p><h4 id="代理udp数据"><a href="#代理udp数据" class="headerlink" title="代理udp数据"></a>代理udp数据</h4><p>后续发现一个大神的iptable配置<a href="https://github.com/Outofpit/clash-merlin">项目地址</a>，可以代理UDP；<br>稍作修改后可以和UU加速器共存，并且不再是F而是未开代理的B。</p><ul><li>需要注意的是，需将Switch的网络设置如下：</li><li>ip：192.168.2.100和192.168.2.101；</li><li>子网掩码：255.255.255.0；</li><li>网关：192.168.2.1；</li><li>DNS：223.5.5.5；114.114.114.114；</li><li>或者自定义设置后，修改下面配置中的ip地址，将其排除代理。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line">proxy_port=7892</span><br><span class="line">lan_ip=192.168.2.1</span><br><span class="line">ssh_port=22</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ports redirect <span class="keyword">for</span> clash except port 22 <span class="keyword">for</span> ssh connection</span></span><br><span class="line">iptables -t nat -A PREROUTING -p tcp --dport $ssh_port -j ACCEPT</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> redirect <span class="keyword">for</span> clash except Nintendo Switch</span></span><br><span class="line">iptables -t nat -I PREROUTING -s 192.168.2.100/32 -j RETURN</span><br><span class="line">iptables -t nat -I PREROUTING -s 192.168.2.101/32 -j RETURN</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">new</span></span><br><span class="line">iptables -t nat -N CLASH</span><br><span class="line">iptables -t nat -A CLASH -d 192.168.0.0/16 -j RETURN</span><br><span class="line">iptables -t nat -A CLASH -d 10.0.0.0/8 -j RETURN</span><br><span class="line">iptables -t nat -A CLASH -d 127.0.0.0/8 -j RETURN</span><br><span class="line">iptables -t nat -A CLASH -d 169.254.0.0/16 -j RETURN</span><br><span class="line">iptables -t nat -A CLASH -d 172.16.0.0/12 -j RETURN</span><br><span class="line">iptables -t nat -A CLASH -d 224.0.0.0/4 -j RETURN</span><br><span class="line">iptables -t nat -A CLASH -d 240.0.0.0/4 -j RETURN</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">redirect to Clash</span></span><br><span class="line">iptables -t nat -A CLASH -p tcp -j REDIRECT --to-ports $proxy_port</span><br><span class="line">iptables -t nat -A PREROUTING -j CLASH</span><br><span class="line"><span class="meta">#</span><span class="bash"> fake-ip rules</span></span><br><span class="line">iptables -t nat -A OUTPUT -p tcp -d 198.18.0.0/16 -j REDIRECT --to-ports $proxy_port</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">DNS</span></span><br><span class="line"><span class="meta">#</span><span class="bash">iptables -t nat -A PREROUTING -p udp -m udp --dport 53 -j DNAT --to-destination <span class="variable">$lan_ip</span>:55</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> udp</span></span><br><span class="line">modprobe xt_TPROXY</span><br><span class="line">proxy_fwmark=&quot;0x162&quot;</span><br><span class="line">proxy_table=&quot;0x162&quot;</span><br><span class="line">ip rule add fwmark $proxy_fwmark table $proxy_table</span><br><span class="line">ip route add local default dev lo table $proxy_table</span><br><span class="line">iptables -t mangle -N CLASH</span><br><span class="line">iptables -t mangle -A CLASH -d 192.168.0.0/16 -j RETURN</span><br><span class="line">iptables -t mangle -A CLASH -d 10.0.0.0/8 -j RETURN</span><br><span class="line">iptables -t mangle -A CLASH -d 127.0.0.0/8 -j RETURN</span><br><span class="line">iptables -t mangle -A CLASH -d 169.254.0.0/16 -j RETURN</span><br><span class="line">iptables -t mangle -A CLASH -d 172.16.0.0/12 -j RETURN</span><br><span class="line">iptables -t mangle -A CLASH -d 224.0.0.0/4 -j RETURN</span><br><span class="line">iptables -t mangle -A CLASH -d 240.0.0.0/4 -j RETURN</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> redirect to Clash</span></span><br><span class="line">iptables -t mangle -A CLASH -p udp -j TPROXY --on-port $proxy_port --tproxy-mark $proxy_table</span><br><span class="line">iptables -t mangle -A PREROUTING -p udp -j CLASH</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> redirect <span class="keyword">for</span> clash except Nintendo Switch</span></span><br><span class="line">iptables -t mangle -I PREROUTING -s 192.168.2.100/32 -j RETURN</span><br><span class="line">iptables -t mangle -I PREROUTING -s 192.168.2.101/32 -j RETURN</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> fake-ip rules</span></span><br><span class="line">iptables -t mangle -A OUTPUT -p udp -d 198.18.0.0/16 -j MARK --set-mark $proxy_fwmark</span><br></pre></td></tr></table></figure><h4 id="绕过Clash处理udp数据"><a href="#绕过Clash处理udp数据" class="headerlink" title="绕过Clash处理udp数据"></a>绕过Clash处理udp数据</h4><blockquote><p>仅让Clash处理DNS地址为路由器地址（192.168.2.1）的客户端请求；<br>在不需要代理的设备中将DNS地址设置为非路由器地址即可绕过代理；<br>甚至该模式下无需固定Switch的ip，可以稳定到达B，以及王者荣耀在延迟测试的情况下保持在21~24ms。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line">proxy_port=7892</span><br><span class="line">lan_ip=192.168.2.1</span><br><span class="line">ssh_port=22</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ports redirect <span class="keyword">for</span> clash except port 22 <span class="keyword">for</span> ssh connection</span></span><br><span class="line">iptables -t nat -A PREROUTING -p tcp --dport $ssh_port -j ACCEPT</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> new</span></span><br><span class="line">iptables -t nat -N CLASH</span><br><span class="line">iptables -t nat -A CLASH -d 192.168.0.0/16 -j RETURN</span><br><span class="line">iptables -t nat -A CLASH -d 10.0.0.0/8 -j RETURN</span><br><span class="line">iptables -t nat -A CLASH -d 127.0.0.0/8 -j RETURN</span><br><span class="line">iptables -t nat -A CLASH -d 169.254.0.0/16 -j RETURN</span><br><span class="line">iptables -t nat -A CLASH -d 172.16.0.0/12 -j RETURN</span><br><span class="line">iptables -t nat -A CLASH -d 224.0.0.0/4 -j RETURN</span><br><span class="line">iptables -t nat -A CLASH -d 240.0.0.0/4 -j RETURN</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> redirect to Clash and except udp</span></span><br><span class="line">iptables -t nat -A CLASH -p tcp -j REDIRECT --to-ports $proxy_port</span><br><span class="line">iptables -t nat -A PREROUTING ! -p udp -j CLASH</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> DNS</span></span><br><span class="line">iptables -t nat -I PREROUTING -p udp -m udp -d $lan_ip --dport 53 -j DNAT --to-destination $lan_ip:55</span><br></pre></td></tr></table></figure><h3 id="更改dnsmasq端口（Clash的DNS服务监听非53端口则无需修改）"><a href="#更改dnsmasq端口（Clash的DNS服务监听非53端口则无需修改）" class="headerlink" title="更改dnsmasq端口（Clash的DNS服务监听非53端口则无需修改）"></a>更改dnsmasq端口（Clash的DNS服务监听非53端口则无需修改）</h3><p>如果前面配置文件中Clash监听了DNS服务器的53端口，但是53端口已经被dnsmasq占用，所以要将dnsmasq端口更改或直接关闭。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch /jffs/configs/dnsmasq.conf.add</span><br><span class="line">vi /jffs/configs/dnsmasq.conf.add</span><br></pre></td></tr></table></figure><p>将以下内容添加进去，0为关闭DNS功能，当然也可以更改为5353等端口；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">port=0</span><br></pre></td></tr></table></figure><p>我这边直接关闭dnsmasq的DNS解析功能，仅留存DHCP功能；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service restart_dnsmasq</span><br></pre></td></tr></table></figure><p>重启dnsmasq服务。</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>需要在路由器—内部网络中将DNS地址设置为路由器地址，至此连接至改路由器的所有设备都将会科学上网。</p><h2 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h2><p>不知道是AC86U的原因还是命令行位置不对，如果使用<code>start-stop-daemon</code>是无法在路由器重启时启动Clash。</p><p>所以我是使用<code>&amp;</code>来进行后台运行；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /jffs/scripts/wan-start</span><br></pre></td></tr></table></figure><p>在最后添加</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/bin/sh /jffs/clash/clash-iptable.sh</span><br><span class="line">/jffs/clash/clash -d /jffs/clash/ &amp;</span><br></pre></td></tr></table></figure><h2 id="尚存问题"><a href="#尚存问题" class="headerlink" title="尚存问题"></a>尚存问题</h2><ul><li><h4 id="与UU加速器共存（已解决）"><a href="#与UU加速器共存（已解决）" class="headerlink" title="与UU加速器共存（已解决）"></a>与UU加速器共存（已解决）</h4><p>之前尝试联系Merlin开发者以更新iptable版本来使用-m owner -pid-owner直接排除UU加速器的端口，但是被以稳定性无法保障为由驳回。</p><p>解决思路：将Switch固定ip，并在iptable表中排除。</p></li><li><h4 id="网络环境中游戏问题及无需代理的设备（已解决）"><a href="#网络环境中游戏问题及无需代理的设备（已解决）" class="headerlink" title="网络环境中游戏问题及无需代理的设备（已解决）"></a>网络环境中游戏问题及无需代理的设备（已解决）</h4><p>归根结底还是udp数据类型的问题，fake-ip模式下，由于原有iptable规则所有流量都会经过Clash，所以无法合理区分诸如王者荣耀等游戏以及微信视频聊天的udp数据，从而会导致游戏丢包以及掉线。</p><p>解决思路：</p><ol><li><p>在iptable中仅转发对fake-ip请求DNS的udp数据，对tcp以及外部udp的数据进行RETURN处理；</p></li><li><p>使用redir-host；</p></li></ol></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Clash-For-Merlin&quot;&gt;&lt;a href=&quot;#Clash-For-Merlin&quot; class=&quot;headerlink&quot; title=&quot;Clash For Merlin&quot;&gt;&lt;/a&gt;Clash For Merlin&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;设</summary>
      
    
    
    
    
    <category term="瞎折腾" scheme="http://www.zigma.cc/tags/%E7%9E%8E%E6%8A%98%E8%85%BE/"/>
    
  </entry>
  
  <entry>
    <title>【JSBox】Patterns-能自定义花样文字的键盘脚本</title>
    <link href="http://www.zigma.cc/2019/05/19/%E3%80%90JSBox%E3%80%91Patterns-%E8%83%BD%E8%87%AA%E5%AE%9A%E4%B9%89%E8%8A%B1%E6%A0%B7%E6%96%87%E5%AD%97%E7%9A%84%E9%94%AE%E7%9B%98%E8%84%9A%E6%9C%AC/"/>
    <id>http://www.zigma.cc/2019/05/19/%E3%80%90JSBox%E3%80%91Patterns-%E8%83%BD%E8%87%AA%E5%AE%9A%E4%B9%89%E8%8A%B1%E6%A0%B7%E6%96%87%E5%AD%97%E7%9A%84%E9%94%AE%E7%9B%98%E8%84%9A%E6%9C%AC/</id>
    <published>2019-05-19T04:00:00.000Z</published>
    <updated>2019-05-19T12:28:43.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="失踪人员回归"><a href="#失踪人员回归" class="headerlink" title="失踪人员回归"></a>失踪人员回归</h1><p>回来冒泡，终于下定决心把新脚本写完了，至于以前的那些坑……Emmmmmmmmm……</p><p>先说说Light Store吧，自从后台小哥去考研了，就没更新过，过段时间<strong>可能</strong>会更新一下后台数据，但也仅仅是更新后台数据。还有一个未公开过的Color Picker的坑，弄到一半跑路了，可能会重新捡起来。至于SysInfo Pro的重构和Days Pro老提起的多事件支持，优先级还是要再往后放放。</p><h1 id="新脚本"><a href="#新脚本" class="headerlink" title="新脚本"></a>新脚本</h1><p>新脚本是一个功能类似于花样文字的脚本。可以转换，也可以当成键盘直接输入，还有每日一句的图片生成和分享。</p><p>这个脚本的原理就是将英文字母逐个转换为Unicode字符，并且已经将样式文件以及颜色文件托管在了Github，后续如果高兴地话不需要更新脚本就能增加样式。</p><p>因为Unicode本身属于图案一类，所以我给它取名为Patterns，意思为图案。</p><p><img src="http://zigma-pic.test.upcdn.net/blog/patterns/loading.jpg" alt="启动界面"></p><p>启动页面加入了Lottie动画，老机型也不用像Light Store加载界面那样用过多的技能渲染动画而造成卡顿。</p><p>​    <img src="http://zigma-pic.test.upcdn.net/blog/patterns/1.png" alt="主界面"></p><p>主界面的颜色跟随了JSBox主程序，主界面右下两个按钮分别是将剪贴板文字转化为花样文字，以及手动输入转换，而点击列表内容将复制到剪贴板。</p><p><img src="http://zigma-pic.test.upcdn.net/blog/patterns/3.jpg" alt="手气不错"></p><p>之前一直不懂谷歌的手气不错的用处，后来才知道是谷歌Geeker灵魂的存在。所以我想既然这个脚本只能用于英文，那为什么不再加一点关于英文的功能。因此制作了这个界面，打开脚本将默认抓取金山词霸开放的每日一句api内容，后续点击手气不错将在个人Lean Cloud的5421句经典英语电影台词数据库中随机抓取一条展示，并且渐变色背景会随机变换。当然上述的内容你都可以自己输入，不过需要注意的是水印的改变是需要先署名再选择样式，为了保证标题、主文显示协调性，只有水印是由Unicode字符显示。</p><p>改变完之后，点击上面的卡牌即能分享或保存到相册。</p><p><img src="http://zigma-pic.test.upcdn.net/blog/patterns/2.png" alt="每日一句"></p><p>当然你要是乐意，还能加个做成这样</p><p><img src="http://zigma-pic.test.upcdn.net/blog/patterns/4.jpg" alt="Apple Card"></p><p>另外就是设置界面，这个等一下讲，先讲键盘。</p><p><img src="http://zigma-pic.test.upcdn.net/blog/patterns/5.jpg" alt="键盘"></p><p>键盘的样式参考了搜狗手机输入法的一款皮肤，但是相对于搜狗，这个炫彩键盘的颜色是随机出现的，同时可以自定义大小写、数字样式。而由于JSBox的原因，键盘默认设置高度为267，不能继续缩小，所以可能小屏手机上面使用起来会遮挡大半屏幕。另外键盘是适配X系列的手机的，XR是通过测试，X系列将会自动隐藏上图的地球。</p><p>由于不懂Runtime，求助开发者钟大以后才有连续删除功能，而连续输入功能是不存在的。但是作为一款不是主力键盘，应该也够用了。</p><p><img src="http://zigma-pic.test.upcdn.net/blog/patterns/6.jpg" alt="设置"></p><p>关于设置界面基本都是键盘的设置，也比较简单，可以设置前述键盘的大小写样式和数字样式，这个大小写样式亦能够作用于主界面第一个样式，不过还是需要先设置样式再更改内容。缓存是为了减少服务器压力，设置后台更新样式的间隔时间，默认就行。</p><p>最后，这个脚本也同时支持多语言以及静默更新。</p><p><img src="http://zigma-pic.test.upcdn.net/blog/patterns/7.jpg" alt="多语言"></p><h1 id="需要注意"><a href="#需要注意" class="headerlink" title="需要注意"></a>需要注意</h1><p>需要注意的是，JSBox在软件左上角齿轮—键盘脚本—选择本脚本，并在设置—通用—键盘中加入JSBox才可使用。并且在第一次开启键盘脚本时，需要点击键盘上的“图钉”符号并再次打开后才会正常显示。</p><h1 id="安装连接"><a href="#安装连接" class="headerlink" title="安装连接"></a>安装连接</h1><p><a href="https://xteko.com/redir?name=Patterns&url=http://zigma.juniancc.top/Patterns.box">安装链接</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzU3NzE2MzI2MA==&mid=100000038&idx=1&sn=d931c08c59e6e8fc7ae62deeef02b60f&chksm=7d099bb54a7e12a325d55d721ce098bdcf3f02e1608e25c8f1fcf0c77bae44f21167512a0627#rdZiGma">公众号文章</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;失踪人员回归&quot;&gt;&lt;a href=&quot;#失踪人员回归&quot; class=&quot;headerlink&quot; title=&quot;失踪人员回归&quot;&gt;&lt;/a&gt;失踪人员回归&lt;/h1&gt;&lt;p&gt;回来冒泡，终于下定决心把新脚本写完了，至于以前的那些坑……Emmmmmmmmm……&lt;/p&gt;
&lt;p&gt;先说说Li</summary>
      
    
    
    
    <category term="JSBox" scheme="http://www.zigma.cc/categories/JSBox/"/>
    
    
    <category term="JSBox" scheme="http://www.zigma.cc/tags/JSBox/"/>
    
  </entry>
  
  <entry>
    <title>【Python】建立自动签到签退工作流</title>
    <link href="http://www.zigma.cc/2019/03/09/%E3%80%90Python%E3%80%91%E5%BB%BA%E7%AB%8B%E8%87%AA%E5%8A%A8%E7%AD%BE%E5%88%B0%E7%AD%BE%E9%80%80%E5%B7%A5%E4%BD%9C%E6%B5%81/"/>
    <id>http://www.zigma.cc/2019/03/09/%E3%80%90Python%E3%80%91%E5%BB%BA%E7%AB%8B%E8%87%AA%E5%8A%A8%E7%AD%BE%E5%88%B0%E7%AD%BE%E9%80%80%E5%B7%A5%E4%BD%9C%E6%B5%81/</id>
    <published>2019-03-09T03:20:00.000Z</published>
    <updated>2019-03-11T15:54:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题提出"><a href="#问题提出" class="headerlink" title="问题提出"></a>问题提出</h1><p>又到了一年一度的三八国际妇女劳动节，作为单位部门里面唯三的男同志依旧坚守岗位，剩下的女同志全部去参加活动了。</p><p>结合之前食堂改造刷卡机一直没有着落，寻思着每天上班都能按时到，但是因为早餐的问题不得不先去行政楼打卡再去食堂或者找别人帮忙网页签到。</p><p>所以用大家都不在的时间研究了一下自动签退的脚本。</p><h1 id="问题梳理"><a href="#问题梳理" class="headerlink" title="问题梳理"></a>问题梳理</h1><p>最早的想法是利用按键精灵，网页打开后模拟按键进行操作，很早的时候就已经测试过，似乎不太可行，对于Click操作可能有点问题，因此被抛弃了。</p><p>后来的想法是做一个自动运行的油猴脚本，但是不能定时启动，这种事情无人值守才有意义不是？</p><p>Google了一下解决方案，大部分都是利用Python+selenium实现，因为是第一次接触Python，之前虽然有听过大名，但是一直没有实际需求去接触这块，所以网上扒了点代码适配了一下签到网页，实现了多人签到。</p><h1 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h1><p>基本的解决思路是：</p><p>​    设置电脑自动开机→Win自带的计划任务→执行Pyhthon脚本签到.</p><p>​    好在单位电脑BIOS可以设置定时开机，不用一直开着了。</p><p>Python解决思路：</p><p>​    利用selenium，打开签到网页，读取json文件后模拟登陆、签到、退出等一系列操作，实现多人签到。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><blockquote><h3 id="Python环境安装"><a href="#Python环境安装" class="headerlink" title="Python环境安装"></a>Python环境安装</h3></blockquote><p>直接去Python下载页面下载对应版本安装即可，记得在安装时就勾选配置环境变量。</p><p><a href="https://www.python.org/downloads/">Python下载地址</a></p><blockquote><h3 id="selenium安装"><a href="#selenium安装" class="headerlink" title="selenium安装"></a>selenium安装</h3></blockquote><p>由于是离线环境，因此需要将selenium包下载后放到本地文件进行安装。</p><p><a href="https://pypi.org/project/selenium/">selenium下载地址</a></p><p>解压后放置到Python的安装目录的\Lib\site-packages中，进入setup.py文件的文件夹内,空白处按住Shift+鼠标右键，选择在此处打开命令窗口，输入命令:python setup.py install。</p><blockquote><h3 id="配置ChromeDriver"><a href="#配置ChromeDriver" class="headerlink" title="配置ChromeDriver"></a>配置ChromeDriver</h3></blockquote><p>下载Chrome版本对应的ChromeDriver并置于Python安装目录的Scripts文件夹中。</p><p><a href="https://npm.taobao.org/mirrors/chromedriver/">ChromeDriver国内镜像</a></p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> time </span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line"> </span><br><span class="line">username=[]</span><br><span class="line">passwd=[]</span><br><span class="line"> </span><br><span class="line">driver = webdriver.Chrome() <span class="comment">#模拟浏览器打开网站</span></span><br><span class="line">driver.get(<span class="string">&quot;http://203.128.0.140:9090/lemis/&quot;</span>)</span><br><span class="line"><span class="comment">#driver.maximize_window() #将窗口最大化</span></span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;info.json&quot;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">setting = json.load(f)</span><br><span class="line">useraccount = setting[<span class="string">&#x27;useraccount&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(useraccount)):</span><br><span class="line">username=useraccount[i][<span class="string">&#x27;username&#x27;</span>]</span><br><span class="line">passwd=useraccount[i][<span class="string">&#x27;passwd&#x27;</span>]</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"> time.sleep(<span class="number">2</span>) <span class="comment">#延时加载</span></span><br><span class="line"> <span class="comment">#找到登录框，输入账号密码</span></span><br><span class="line"> now_handle = driver.current_window_handle</span><br><span class="line"> driver.switch_to_window(now_handle)</span><br><span class="line"> driver.find_element_by_name(<span class="string">&quot;bsc011&quot;</span>).clear()</span><br><span class="line"> time.sleep(<span class="number">1</span>)</span><br><span class="line"> driver.find_element_by_name(<span class="string">&quot;bsc011&quot;</span>).send_keys(username)</span><br><span class="line"> driver.find_element_by_name(<span class="string">&quot;bsc013&quot;</span>).send_keys(passwd)</span><br><span class="line">  </span><br><span class="line"> <span class="comment">#模拟点击登录</span></span><br><span class="line"> driver.find_element_by_id(<span class="string">&quot;hhh&quot;</span>).click()</span><br><span class="line"> time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span> <span class="built_in">int</span>(time.strftime(<span class="string">&quot;%H&quot;</span>,time.localtime())) &lt; <span class="number">9</span>:</span><br><span class="line"> <span class="comment">#模拟点击签到</span></span><br><span class="line"> driver.find_element_by_id(<span class="string">&quot;registration&quot;</span>).click()</span><br><span class="line"> <span class="built_in">print</span>(username+<span class="string">&quot;签到成功&quot;</span>)</span><br><span class="line"> time.sleep(<span class="number">2</span>)</span><br><span class="line"> <span class="keyword">else</span>:</span><br><span class="line"> <span class="comment">#模拟点击签退</span></span><br><span class="line"> driver.find_element_by_id(<span class="string">&quot;signout&quot;</span>).click()</span><br><span class="line"> <span class="built_in">print</span>(username+<span class="string">&quot;签退成功&quot;</span>)</span><br><span class="line"> time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"> <span class="comment">#关闭签到提示</span></span><br><span class="line"> driver.find_element_by_id(<span class="string">&quot;0&quot;</span>).click()</span><br><span class="line"> time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"> <span class="comment">#模拟退出</span></span><br><span class="line"> driver.find_element_by_xpath(<span class="string">&quot;//*[@class=&#x27;mini-layout-region-body&#x27;]/div[2]/ul[2]/li[1]/a&quot;</span>).click()</span><br><span class="line"> time.sleep(<span class="number">2</span>)</span><br><span class="line"> <span class="comment">#点击确定按钮</span></span><br><span class="line"> driver.switch_to_alert().accept()</span><br><span class="line"> time.sleep(<span class="number">2</span>)</span><br><span class="line"> <span class="built_in">print</span>(username+<span class="string">&quot;登出成功&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"> <span class="built_in">print</span>(username+<span class="string">&quot;签退失败&quot;</span>)</span><br><span class="line"> </span><br><span class="line">driver.quit <span class="comment">#退出程序</span></span><br></pre></td></tr></table></figure><h1 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h1><p>因为内外网分离，所以无法在执行完后获取结果。后续可以利用内外网文件交换系统，在执行完后将Log文件上传，以便于人在外面时了解执行情况。并且在脚本中增加自动关机命令，在签退完成后自动关机。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题提出&quot;&gt;&lt;a href=&quot;#问题提出&quot; class=&quot;headerlink&quot; title=&quot;问题提出&quot;&gt;&lt;/a&gt;问题提出&lt;/h1&gt;&lt;p&gt;又到了一年一度的三八国际妇女劳动节，作为单位部门里面唯三的男同志依旧坚守岗位，剩下的女同志全部去参加活动了。&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="Python" scheme="http://www.zigma.cc/categories/Python/"/>
    
    
    <category term="Python" scheme="http://www.zigma.cc/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>【VBA】统计重复出现的姓名及出现次数</title>
    <link href="http://www.zigma.cc/2018/12/16/%E3%80%90VBA%E3%80%91%E7%BB%9F%E8%AE%A1%E9%87%8D%E5%A4%8D%E5%87%BA%E7%8E%B0%E7%9A%84%E5%A7%93%E5%90%8D%E5%8F%8A%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0/"/>
    <id>http://www.zigma.cc/2018/12/16/%E3%80%90VBA%E3%80%91%E7%BB%9F%E8%AE%A1%E9%87%8D%E5%A4%8D%E5%87%BA%E7%8E%B0%E7%9A%84%E5%A7%93%E5%90%8D%E5%8F%8A%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0/</id>
    <published>2018-12-16T07:17:46.000Z</published>
    <updated>2018-12-16T07:43:16.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>同事又来提需求了，几百人的名单需要统计出现过的人名，还需要统计出现过的次数。</p><p>如果依靠肉眼估计眼睛都瞎了，因此求助了我，昨天没电脑想网上看一下类似的功能的公式，但是几乎都是不尽人意。</p><p>而且利用<code>COUNTIF</code>公式还是需要先知道出现过那些人，<code>VLOOKUP</code>似乎也不能一步到位。排序+筛选是个办法，但是感觉有点曲线救国，会打乱顺序，所以依旧利用万能的VBA来处理。    </p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>利用VBA定位A列最后非空单元格，然后在B列利用嵌套循环匹配有无出现过该人，如果有则次数加1，如果没有则在B列最后添加该人姓名，并且定义出现次数为1。</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> test()</span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">1</span> <span class="keyword">To</span> Range(<span class="string">&quot;A100&quot;</span>).<span class="keyword">End</span>(xlUp).Row</span><br><span class="line">        kim = <span class="number">0</span></span><br><span class="line">        <span class="keyword">For</span> j = <span class="number">2</span> <span class="keyword">To</span> Range(<span class="string">&quot;B50&quot;</span>).<span class="keyword">End</span>(xlUp).Row</span><br><span class="line">            <span class="keyword">If</span> Range(<span class="string">&quot;A&quot;</span> &amp; i) = Range(<span class="string">&quot;B&quot;</span> &amp; j) <span class="keyword">Then</span></span><br><span class="line">                Range(<span class="string">&quot;C&quot;</span> &amp; j) = Range(<span class="string">&quot;C&quot;</span> &amp; j) + <span class="number">1</span></span><br><span class="line">                kim = <span class="number">1</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">        <span class="keyword">Next</span></span><br><span class="line">        <span class="keyword">If</span> kim = <span class="number">0</span> <span class="keyword">Then</span></span><br><span class="line">            max_r = Range(<span class="string">&quot;B50&quot;</span>).<span class="keyword">End</span>(xlUp).Row</span><br><span class="line">            Range(<span class="string">&quot;B&quot;</span> &amp; max_r + <span class="number">1</span>) = Range(<span class="string">&quot;A&quot;</span> &amp; i)</span><br><span class="line">            Range(<span class="string">&quot;C&quot;</span> &amp; max_r + <span class="number">1</span>) = <span class="number">1</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>相对于使用公式和透视图，个人还是比较喜欢VBA，不需要其他填充之类操作，点击就能出来结果，不会污染源数据，更为方便的是可以另存为工具，在下次使用时将目标数据粘贴进来就完事了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h1&gt;&lt;p&gt;同事又来提需求了，几百人的名单需要统计出现过的人名，还需要统计出现过的次数。&lt;/p&gt;
&lt;p&gt;如果依靠肉眼估计眼睛都瞎了，因此求助了我，昨天没</summary>
      
    
    
    
    <category term="VBA" scheme="http://www.zigma.cc/categories/VBA/"/>
    
    
    <category term="VBA" scheme="http://www.zigma.cc/tags/VBA/"/>
    
  </entry>
  
  <entry>
    <title>树莓派+Aria2搭建简易媒体中心</title>
    <link href="http://www.zigma.cc/2018/11/09/%E6%A0%91%E8%8E%93%E6%B4%BE+Aria2%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E5%AA%92%E4%BD%93%E4%B8%AD%E5%BF%83/"/>
    <id>http://www.zigma.cc/2018/11/09/%E6%A0%91%E8%8E%93%E6%B4%BE+Aria2%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E5%AA%92%E4%BD%93%E4%B8%AD%E5%BF%83/</id>
    <published>2018-11-09T12:19:34.000Z</published>
    <updated>2022-01-04T03:11:15.216Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>没有更新博客了，一方面是工作忙，另一方面还是懒，没啥动力更新，虽然欠着一堆东西，大西北的视频剪了一半，找不到好的BGM索性一直扔在那边，JSBox好几个脚本在烂尾或者已经难产。</p><p>顺便吐槽一下七牛云，回收了测试域名还不能打包下载素材。</p><p>前几天，大概也有几周了，被橘年大佬安利了一下树莓派，讲道理其他的功能并不吸引我，但是还算便宜，所以入了一个树莓派3B+作为了下载机使用。</p><h1 id="几个坑"><a href="#几个坑" class="headerlink" title="几个坑"></a>几个坑</h1><ol><li>利用Aria2作为下载程序。</li><li>开机挂载NTFS格式硬盘。</li><li>利用Samba共享协议将内容共享给局域网访问。</li><li>路由器frp穿透，增加外网控制。</li></ol><h1 id="安装Aria2"><a href="#安装Aria2" class="headerlink" title="安装Aria2"></a>安装Aria2</h1><p>树莓派系统安装以及配置在此不赘，直接从安装Aria2开始。</p><p>相比于早期需要编译安装Aria2，现在安装方便许多。</p><p>只需要用Aria2一键安装脚本即可安装，而且可以保证是最新版，而不是官方安装库里面一万年不更新的旧版，一些新功能还是挺有必要的，配置原文均有详解，在此不赘述。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/aria2.sh &amp;&amp; chmod +x aria2.sh &amp;&amp; bash aria2.sh</span><br></pre></td></tr></table></figure><p>原帖地址：</p><blockquote><p><a href="https://doub.io/shell-jc4/comment-page-1/#comments">逗比根据地 » 『原创』BT/种子/磁力链接下载工具 —— Aria2 一键安装管理脚本</a></p></blockquote><h1 id="挂载NTFS格式硬盘"><a href="#挂载NTFS格式硬盘" class="headerlink" title="挂载NTFS格式硬盘"></a>挂载NTFS格式硬盘</h1><p>实验了很久安装完以后无法建立下载任务，后来发现是因为树莓派兼容性问题，不支持NTFS格式硬盘写入。但是作为下载机难免下载点高清电影什么的，不支持4G以上单文件实在不能忍，因此需要用插件让树莓派兼容写入。</p><ul><li><p>安装NTFS-3G插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ntfs-3g</span><br></pre></td></tr></table></figure></li><li><p>挂载NTFS</p><p>首先要看硬盘挂载情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -h</span><br></pre></td></tr></table></figure><p>可以看到返回结果/dev/sda就是硬盘地址，因为这是我的已经挂载后的提示，最右边原本不是/media/pi的路径，而是系统自己挂载的路径，这里需要我挂载到自己想要的路径。</p><blockquote><p>Filesystem      Size  Used Avail Use% Mounted on<br>/dev/root        15G  3.7G   11G  27% /<br>devtmpfs        460M     0  460M   0% /dev<br>tmpfs           464M     0  464M   0% /dev/shm<br>tmpfs           464M   13M  452M   3% /run<br>tmpfs           5.0M  4.0K  5.0M   1% /run/lock<br>tmpfs           464M     0  464M   0% /sys/fs/cgroup<br>/dev/mmcblk0p1   44M   22M   22M  51% /boot<br>/dev/sda        466G  235G  231G  51% /media/pi<br>tmpfs            93M     0   93M   0% /run/user/1000</p></blockquote><ul><li><p>先在media下新建目录/media/pi</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /media</span><br><span class="line">sudo mkdir pi</span><br></pre></td></tr></table></figure></li><li><p>直接挂载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -t ntfs-3g /dev/sda /media/pi</span><br></pre></td></tr></table></figure></li><li><p>需要添加开机自动挂载，则编辑/etc/fstab文件，添加以下语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/dev/sda  /media/pi ntfs-3g defaults,noexec,umask=0000 0 0</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="安装Samba"><a href="#安装Samba" class="headerlink" title="安装Samba"></a>安装Samba</h1><ul><li>更新源</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><ul><li>安装Samba</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install samba samba-common-bin</span><br></pre></td></tr></table></figure><ul><li>修改配置文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/samba/smb.conf</span><br></pre></td></tr></table></figure><blockquote><p>找到<em>Global Settings</em>节*[global]*部分：</p><p>将*# wins support = no<em>行改为</em># wins support = yes*</p><p>找到<em>Share Definitions</em>节*[homes]*部分：</p><p>将<em>read only = yes</em>行改为<em>read only = no</em></p><p>将*[homes]<em>下</em>path<em>后改为</em>/media/pi*</p></blockquote><ul><li>重启Samba服务</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/samba restart</span><br></pre></td></tr></table></figure><ul><li>添加默认用户pi到samba</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo smbpasswd -a pi</span><br></pre></td></tr></table></figure><p>输入密码后确定，便可在其他设备访问树莓派共享的文件夹</p><h1 id="路由器安装及配置frp"><a href="#路由器安装及配置frp" class="headerlink" title="路由器安装及配置frp"></a>路由器安装及配置frp</h1><p>该节可以参考之前的文章</p><blockquote><p><a href="http://www.zigma.cc/2018/05/01/%E3%80%90%E7%9E%8E%E6%8A%98%E8%85%BE%E3%80%91frp+Aria2%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E4%B8%8B%E8%BD%BD%E7%AE%A1%E7%90%86/">【瞎折腾】frp+Aria2实现远程下载管理</a></p></blockquote><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>树莓派运行Aria2比路由器运行稳定许多，速度也不错，只不过不存在硬盘休眠的功能，如果硬盘一直开着还是挺伤的。</p><p>因此ios系统配合PiHelp这款app管理，自定义关机命令后即可控制关机。其他的支持ssh的客户端加上frp穿透亦可，只不过需要每次自己打命令。</p><p>如果想要开机，我想的办法是电源接在小米插头之类的智能插头上，通电即开机。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;没有更新博客了，一方面是工作忙，另一方面还是懒，没啥动力更新，虽然欠着一堆东西，大西北的视频剪了一半，找不到好的BGM索性一直扔在那边，JS</summary>
      
    
    
    
    
    <category term="瞎折腾" scheme="http://www.zigma.cc/tags/%E7%9E%8E%E6%8A%98%E8%85%BE/"/>
    
  </entry>
  
  <entry>
    <title>西北大环线行程</title>
    <link href="http://www.zigma.cc/2018/09/08/%E8%A5%BF%E5%8C%97%E5%A4%A7%E7%8E%AF%E7%BA%BF%E8%A1%8C%E7%A8%8B/"/>
    <id>http://www.zigma.cc/2018/09/08/%E8%A5%BF%E5%8C%97%E5%A4%A7%E7%8E%AF%E7%BA%BF%E8%A1%8C%E7%A8%8B/</id>
    <published>2018-09-07T16:03:17.000Z</published>
    <updated>2022-01-04T03:11:00.095Z</updated>
    
    <content type="html"><![CDATA[<h1 id="主要行程"><a href="#主要行程" class="headerlink" title="主要行程"></a>主要行程</h1><h2 id="DAY1"><a href="#DAY1" class="headerlink" title="DAY1"></a>DAY1</h2><p>**9月27日，日落：19:03:09 **</p><p>TEAM A小分队从萧山机场出发，12点到达西宁机场，办理租车手续，在 西宁站午餐后前往黑马河，随开随停抓牛羊玩青海湖，傍晚到达黑马河欣赏夕阳住宿晚餐，汽车加油。</p><p><strong>行程：</strong></p><blockquote><p>西宁—（3小时50分钟）—&gt; 黑马河</p></blockquote><p><strong>景点：</strong></p><ul><li><p>青海湖</p></li><li><p>牛羊宝宝</p></li></ul><p><strong>餐饮：</strong></p><blockquote><p>市区购买牛羊肉，自助火锅，自助饭，酸奶</p></blockquote><p><strong>住宿：</strong></p><blockquote><p>共和县黑马河驿路港湾假日酒店</p></blockquote><p><strong>公共交通：</strong></p><ul><li>TEAM A：东方航空MU9941  <code>08:55（杭州）——&gt; 12:00（西宁）</code></li></ul><h2 id="DAY2"><a href="#DAY2" class="headerlink" title="DAY2"></a>DAY2</h2><p><strong>9月28日 ，日出：07:05:30 ，日落：19:27:49</strong></p><p>清晨欣赏青海湖日出，吃早餐睡回笼觉后离开黑马河（9:30）， 途径茶卡汽车站午餐 （10:50），午餐后稍作休息出发前往大柴旦翡翠湖（16:30），伊布拉晚餐（17:00）可能需要排队，入驻酒店泡温泉休息。</p><p><strong>行程：</strong></p><blockquote><p>黑马河  —（1小时20分钟）—&gt; 茶卡 —（4小时45分钟）—&gt; 大柴旦 —（22分钟）—&gt;翡翠湖 —（48分钟）—&gt; 大柴旦雪山温泉 </p></blockquote><p><strong>景点：</strong></p><ul><li><p>翡翠湖</p></li><li><p>大柴旦雪山温泉</p></li></ul><p><strong>餐饮：</strong> </p><ul><li><p>午餐：青原耗牛大骨汤（茶卡）</p></li><li><p>晚餐：伊布拉特色炕锅（大柴旦）</p></li></ul><p><strong>住宿：</strong></p><blockquote><p>大柴旦温泉假日酒店（含温泉票）</p></blockquote><p><strong>公共交通：</strong></p><ul><li>TEAM B：西藏航空TV6026   <code>21:35（杭州）——&gt; 00:30（兰州）</code></li></ul><h2 id="DAY3"><a href="#DAY3" class="headerlink" title="DAY3"></a>DAY3</h2><p><strong>9月29日，日出：07:35:34 ，日落：19:27:49</strong> </p><p>在柴旦木进行午餐准备后，离开大柴旦前往雅丹魔鬼城(8:30)，游玩魔鬼城(9:30)一路向南到达敦煌（14:00），在敦煌午餐休息后前往敦煌汽车站接上TEAM B小分钟队同学，前往鸣沙山，骑骆驼游览月牙泉（17:00），在鸣沙山背面露营，拍摄星空休息。 </p><p><strong>行程：</strong></p><p>TEAM A</p><blockquote><p>大柴旦 —（55分钟）—&gt; 雅丹魔鬼城 —（4小时28分钟）—&gt; 敦煌 —（1小55分钟）—&gt; 敦煌汽车站 —（9分钟）—&gt; 鸣沙山；</p></blockquote><p>TEAM B</p><blockquote><p>兰州西 —（6时26分钟）—&gt; 柳园 —（1小时53分钟）—&gt;敦煌汽车站 —（9分钟）—&gt; 鸣沙山</p></blockquote><p><strong>景点：</strong></p><ul><li><p>鸣沙山：</p><blockquote><p>购买门票后，直接在门口那里录入指纹信息，凭借票和指纹可在3天内多次进入。进入后需排队骑骆驼，骑骆驼一圈耗时约1.5小时，费用100元/人。鸣沙山景区背面露营，清晨可爬到沙峰上去看日出。</p></blockquote><blockquote><p>开放时间：5:00-20:30</p></blockquote><blockquote><p>门票价格：120元/人</p></blockquote></li><li><p>月牙泉：</p><blockquote><p>月牙泉南北长近100米，东西宽约25米，泉水东深西浅，最深处约5米，弯曲如新月，因而得名，晚上20：00左右开始亮灯。</p></blockquote></li></ul><p><strong>餐饮：</strong> </p><ul><li>午餐： 德克士</li><li>晚餐：（露营含餐） ，也可去沙洲夜市逛一逛再返回营地</li></ul><p><strong>住宿：</strong></p><blockquote><p>敦煌露营 </p></blockquote><p><strong>公共交通：</strong> </p><ul><li>TEAM B：动车D2701次  <code>07:50（兰州西） ——&gt; 14:16（柳园）</code></li></ul><h2 id="DAY4"><a href="#DAY4" class="headerlink" title="DAY4"></a>DAY4</h2><p><strong>9月30日，日出：07:36:33 ，日落：19:11:47</strong> </p><p>早餐吃饱后前往莫高窟（10:30），由于提前订票排队时间少。取提前取票（10:10），超过5分钟即作废，游览约2-3小时；游览莫高窟后回到市区午餐（13:00），驱车前往嘉峪关（17:00） </p><p><strong>行程：</strong></p><blockquote><p>酒店 —（40分钟）—&gt; 莫高窟 —（40分钟）—&gt; 敦煌市 —（40分钟）—&gt; 反弹琵琶雕像 —（4小时）—&gt;嘉峪关</p></blockquote><p><strong>景点：</strong></p><ul><li><p>莫高窟：</p><blockquote><p>开放时间：8:00-18:00</p></blockquote><blockquote><p>门票价格：200元/人 </p></blockquote></li></ul><p><strong>餐饮：</strong></p><ul><li><p>午餐：靖远尕六美味羊羔肉（错开高峰避免排队）（敦煌）</p></li><li><p>晚餐：小党烤肉（嘉峪关）</p></li></ul><p><strong>住宿：</strong></p><p>（嘉峪关）</p><h2 id="DAY5"><a href="#DAY5" class="headerlink" title="DAY5"></a>DAY5</h2><p><strong>10月1日，日出：07:22:54 ，日落：19:01:48</strong></p><p>酒店出发，游玩嘉峪关关城景点 （9:00）；结束游玩后在嘉峪关市区午餐休息(11:30)，前往金塔胡杨林游玩（14:00），自由拍照欣赏胡杨林；16:00出发前往张掖市区，由于晚餐时间在路上需要备点干粮，到达张掖市区后夜宵大餐（20:00）</p><p><strong>行程：</strong></p><blockquote><p>酒店 —（30分钟）—&gt; 嘉峪关关城 —（1小时50分钟）—&gt;金塔胡杨林 —（3小时24分钟）—&gt;张掖市 </p></blockquote><p><strong>景点：</strong></p><ul><li><p>嘉峪关关城：</p><blockquote><p>大门步行5分钟从门口走到关城（无需租车或乘坐观光车），游览时长2小时。</p></blockquote><blockquote><p>开放时间：8:00-18:00 </p></blockquote><blockquote><p>门票价格：120元/人，学生票60元</p></blockquote></li><li><p>金塔胡杨林：</p><blockquote><p>位于古丝绸之路中段北侧、甘肃省金塔县城西北8公里处，游览时长2小时。</p></blockquote><blockquote><p>开放时间：7:00-19:00</p></blockquote><blockquote><p>门票价格：65元/人，学生票30元 </p></blockquote></li></ul><p><strong>餐饮：</strong></p><ul><li><p>午餐：大碗小面抿节面馆（嘉峪关）</p></li><li><p>晚餐： 甘州名吃（张掖）</p></li></ul><p><strong>住宿：</strong></p><p>（张掖） </p><h2 id="DAY6"><a href="#DAY6" class="headerlink" title="DAY6"></a>DAY6</h2><p><strong>10月2日，日出：07:14:55 ，日落：18:55:44</strong></p><p>7：20酒店出发，自驾前往张掖丹霞地质公园（8:00），到达公园后乘坐观光车前往4个观赏台，游览后回附近午餐休息（11:00），前往祁连山草原（16:00），欣赏雪山（草原无草欣赏被冻黄了），与祁连山草原石头合影后启程西宁入驻酒店休息(20:00)。 </p><p><strong>行程：</strong></p><blockquote><p>酒店 —（40分钟）—&gt; 丹霞地质公园 —（3小时8分钟）—&gt; 祁连山草原 —（3小时47分钟）—&gt; 西宁 </p></blockquote><p><strong>景点：</strong></p><ul><li><p>张掖丹霞地质公园：</p><blockquote><p>七彩云海台（1号）、七彩仙缘台（2号）、七彩锦绣台（3号）、七彩虹霞台（4号），4号观景台最美。在公园内可搭乘热气球，乘坐8-10分钟，收费200元/人，从西门进入预计游览时间3小时。</p></blockquote><blockquote><p>开放时间：05:30-19:00</p></blockquote><blockquote><p>门票价格：72元/人（含观光车） </p></blockquote></li></ul><p><strong>餐饮：</strong></p><ul><li><p>午餐：清真伊亲阁餐厅（张掖）</p></li><li><p>晚餐：清真伊兰轩青海特色美食（西宁） </p></li></ul><p><strong>住宿：</strong><br>（西宁）待定 </p><h2 id="DAY7"><a href="#DAY7" class="headerlink" title="DAY7"></a>DAY7</h2><p><strong>10月3日，日出：07:09:39</strong></p><p>酒店出发前往塔尔寺游览，门口照相由于时间原因进行地点打卡（8:00），回到西宁市打包西宁特色小吃（可真空包装），回到酒店取行李西宁站（10:00），附近吃碗兰州拉面，前往机场归还汽车（11:00），11:30过安检候机。</p><p><strong>行程：</strong></p><blockquote><p>酒店 —（30分钟）—&gt; 塔尔寺 —（30分钟）—&gt; 酒店 —（X分钟）—（60分钟）—&gt; 曹家堡机场 </p></blockquote><p><strong>景点：</strong></p><ul><li><p>塔尔寺：</p><blockquote><p>酥油花、壁画和堆绣被誉为“塔尔寺艺术三绝”，另外寺内还珍藏了许多佛教典籍和历史、文学、哲学、医药、立法等方面的学术专著。由于塔尔寺内部禁止拍摄，参观时间至少1-3个小时以上。</p></blockquote></li></ul><p><strong>公共交通：</strong></p><ul><li>长龙航空GJ8790   <code>12:45(西宁) ——&gt; 15:40（杭州）</code></li></ul><h3 id="结束大西北旅程，👋"><a href="#结束大西北旅程，👋" class="headerlink" title="结束大西北旅程，👋"></a><em><strong>结束大西北旅程，👋</strong></em></h3><h1 id="物品清单"><a href="#物品清单" class="headerlink" title="物品清单"></a>物品清单</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;主要行程&quot;&gt;&lt;a href=&quot;#主要行程&quot; class=&quot;headerlink&quot; title=&quot;主要行程&quot;&gt;&lt;/a&gt;主要行程&lt;/h1&gt;&lt;h2 id=&quot;DAY1&quot;&gt;&lt;a href=&quot;#DAY1&quot; class=&quot;headerlink&quot; title=&quot;DAY1&quot;&gt;&lt;/a</summary>
      
    
    
    
    
    <category term="旅行" scheme="http://www.zigma.cc/tags/%E6%97%85%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>旧物储藏间</title>
    <link href="http://www.zigma.cc/2018/08/25/%E6%97%A7%E7%89%A9%E5%82%A8%E8%97%8F%E9%97%B4/"/>
    <id>http://www.zigma.cc/2018/08/25/%E6%97%A7%E7%89%A9%E5%82%A8%E8%97%8F%E9%97%B4/</id>
    <published>2018-08-25T15:15:42.000Z</published>
    <updated>2022-01-04T03:12:17.111Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>翻以前的旧物时候，发现了以前还是有很多有意思的东西。</p><p>而且，偶尔出去玩拍的照片一些还是比较适合做壁纸的，但是单独作为一个博文似乎内容又太少。</p><h1 id="PS练手"><a href="#PS练手" class="headerlink" title="PS练手"></a>PS练手</h1><p><img src="http://zigma-pic.test.upcdn.net/blog/oldthings/player.jpg" alt="播放器"></p><p><img src="http://zigma-pic.test.upcdn.net/blog/oldthings/milana.jpg" alt="米拉娜"></p><p><img src="http://zigma-pic.test.upcdn.net/blog/oldthings/icons.jpg" alt="icons"></p><h1 id="壁纸"><a href="#壁纸" class="headerlink" title="壁纸"></a>壁纸</h1><p><img src="http://zigma-pic.test.upcdn.net/blog/oldthings/wallpaper_1.jpg" alt="wallpaper_1"></p><p><img src="http://zigma-pic.test.upcdn.net/blog/oldthings/wallpaper_2.jpg" alt="wallpaper_2"></p><p><img src="http://zigma-pic.test.upcdn.net/blog/oldthings/wallpaper_3.jpg" alt="wallpaper_3"></p><h1 id="壁纸打包地址"><a href="#壁纸打包地址" class="headerlink" title="壁纸打包地址"></a>壁纸打包地址</h1><p><a href="https://pan.baidu.com/s/1J4Vttm77_QDzMdXbwYKp2A">壁纸</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;翻以前的旧物时候，发现了以前还是有很多有意思的东西。&lt;/p&gt;
&lt;p&gt;而且，偶尔出去玩拍的照片一些还是比较适合做壁纸的，但是单独作为一个博文似</summary>
      
    
    
    
    
    <category term="杂物" scheme="http://www.zigma.cc/tags/%E6%9D%82%E7%89%A9/"/>
    
    <category term="照片" scheme="http://www.zigma.cc/tags/%E7%85%A7%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>【JSBox】多图层制作渐变动画</title>
    <link href="http://www.zigma.cc/2018/08/24/%E3%80%90JSBox%E3%80%91%E5%A4%9A%E5%9B%BE%E5%B1%82%E5%88%B6%E4%BD%9C%E6%B8%90%E5%8F%98%E5%8A%A8%E7%94%BB/"/>
    <id>http://www.zigma.cc/2018/08/24/%E3%80%90JSBox%E3%80%91%E5%A4%9A%E5%9B%BE%E5%B1%82%E5%88%B6%E4%BD%9C%E6%B8%90%E5%8F%98%E5%8A%A8%E7%94%BB/</id>
    <published>2018-08-24T02:20:37.000Z</published>
    <updated>2018-12-16T07:15:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在制作Light Store的过程中萌发了很多有意思的想法。</p><p>也制作了几个比较有意思的动画，虽然很多人会以为里面的动画是GIF。</p><p>所以这里就把动画原理和实现方式整理一下，顺便做个记录。</p><h1 id="动画原理"><a href="#动画原理" class="headerlink" title="动画原理"></a>动画原理</h1><p>思路很简单，因为JSBox不支持字体渐变，只提供了一个矩形渐变接口，所以需要一共两层图层来完成动画。</p><ul><li>上层为镂空字体层</li><li>下层为动画渐变层</li></ul><p><img src="http://zigma-pic.test.upcdn.net/blog/sudden/animation.png" alt="animation"></p><p>接下来就是利用JSBox将动画渐变层的渐变颜色动起来。</p><h1 id="渐变原理"><a href="#渐变原理" class="headerlink" title="渐变原理"></a>渐变原理</h1><p>JSBox之中设置颜色有HEX值和RGB值两种方式，但是归根结底HEX只不过是RGB的十六进制显示方式。</p><h2 id="RGB方式"><a href="#RGB方式" class="headerlink" title="RGB方式"></a>RGB方式</h2><p>由于RGB<code>(Red, Green, Blue)</code>是利用的是一个三维坐标。</p><p><img src="http://zigma-pic.test.upcdn.net/blog/sudden/RGB.png" alt="RGB"></p><p>如果利用RGB来动态变更颜色的话，需要平滑地显示红橙黄绿蓝靛紫红一个周期则需要运用Sin函数。</p><p>利用下面的Demo可以清楚看到颜色渐变过程，仅需改变<code>start</code>的值就可以改变起始颜色。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ui.render(&#123;</span><br><span class="line">    <span class="attr">layout</span>: $layout.fill,</span><br><span class="line">    <span class="attr">props</span>: &#123;</span><br><span class="line">        <span class="attr">id</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> start = <span class="number">1</span></span><br><span class="line">$cache.set(<span class="string">&quot;time&quot;</span>, start)</span><br><span class="line">$timer.schedule(&#123;</span><br><span class="line">    <span class="attr">interval</span>: <span class="number">0.1</span>,</span><br><span class="line">    <span class="attr">handler</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> i = $cache.get(<span class="string">&quot;time&quot;</span>)</span><br><span class="line">        <span class="keyword">let</span> a_ = i * <span class="number">2</span> * <span class="number">3.141592654</span> / <span class="number">1200</span></span><br><span class="line">        <span class="keyword">let</span> b_ = i * <span class="number">2</span> * <span class="number">3.141592654</span> / <span class="number">1200</span> + <span class="number">2.094395102</span></span><br><span class="line">        <span class="keyword">let</span> c_ = i * <span class="number">2</span> * <span class="number">3.141592654</span> / <span class="number">1200</span> - <span class="number">2.094395102</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> r = (<span class="number">255</span> * (<span class="built_in">Math</span>.sin(c_) + <span class="number">0.5</span>)) &lt; <span class="number">0</span> ? <span class="number">0</span> : ((<span class="number">255</span> * (<span class="built_in">Math</span>.sin(c_) + <span class="number">0.5</span>)) &gt; <span class="number">255</span> ? <span class="number">255</span> : (<span class="number">255</span> * (<span class="built_in">Math</span>.sin(c_) + <span class="number">0.5</span>)))</span><br><span class="line">        <span class="keyword">let</span> g = (<span class="number">255</span> * (<span class="built_in">Math</span>.sin(b_) + <span class="number">0.5</span>)) &lt; <span class="number">0</span> ? <span class="number">0</span> : ((<span class="number">255</span> * (<span class="built_in">Math</span>.sin(b_) + <span class="number">0.5</span>)) &gt; <span class="number">255</span> ? <span class="number">255</span> : (<span class="number">255</span> * (<span class="built_in">Math</span>.sin(b_) + <span class="number">0.5</span>)))</span><br><span class="line">        <span class="keyword">let</span> b = (<span class="number">255</span> * (<span class="built_in">Math</span>.sin(a_) + <span class="number">0.5</span>)) &lt; <span class="number">0</span> ? <span class="number">0</span> : ((<span class="number">255</span> * (<span class="built_in">Math</span>.sin(a_) + <span class="number">0.5</span>)) &gt; <span class="number">255</span> ? <span class="number">255</span> : (<span class="number">255</span> * (<span class="built_in">Math</span>.sin(a_) + <span class="number">0.5</span>)))</span><br><span class="line"></span><br><span class="line">        $(<span class="string">&quot;1&quot;</span>).bgcolor = $rgb(r,g,b)</span><br><span class="line">        <span class="built_in">console</span>.log(r,g,b)</span><br><span class="line">        $cache.set(<span class="string">&quot;time&quot;</span>, i + <span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="HSV方式"><a href="#HSV方式" class="headerlink" title="HSV方式"></a>HSV方式</h2><p>相对于此，利用HSV值更加直观，唯一缺点就是需要重新将输出的HSV值转换为HEX值。</p><p><img src="http://zigma-pic.test.upcdn.net/blog/sudden//HSV.jpg" alt="HSV"></p><p>在HSV<code>(Hue, Saturation, Lightness，即色相，饱和度，明度)</code>里，颜色变化更为直观，我们只需要变更H值即可，完成一个周期颜色变化，而且也更为强大。</p><p>同样利用一个Demo，来看一下HSV变化。改变<code>hh</code>为起始颜色，改变<code>ss</code>则是统一饱和，<code>vv</code>则是统一明度。</p><p>唯一缺点就是增加了HEX值封装函数，但是相对于上面的RGB方法，这里可以比较直观地控制饱和度和明度。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">$ui.render(&#123;</span><br><span class="line">    <span class="attr">layout</span>: $layout.fill,</span><br><span class="line">    <span class="attr">props</span>: &#123;</span><br><span class="line">        <span class="attr">id</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> hh = <span class="number">0</span></span><br><span class="line"><span class="keyword">let</span> ss = <span class="number">60</span></span><br><span class="line"><span class="keyword">let</span> vv = <span class="number">100</span></span><br><span class="line"></span><br><span class="line">$cache.set(<span class="string">&quot;time&quot;</span>, hh)</span><br><span class="line"><span class="keyword">var</span> timer = $timer.schedule(&#123;</span><br><span class="line">  <span class="attr">interval</span>: <span class="number">0.1</span>,</span><br><span class="line">  <span class="attr">handler</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> i = $cache.get(<span class="string">&quot;time&quot;</span>)</span><br><span class="line">    <span class="keyword">let</span> j = i + <span class="number">60</span></span><br><span class="line">    <span class="keyword">let</span> hex = HSV2HEX(i, ss, vv)</span><br><span class="line">    $(<span class="string">&quot;1&quot;</span>).bgcolor = $color(hex)</span><br><span class="line">    $cache.set(<span class="string">&quot;time&quot;</span>, i &gt; <span class="number">360</span> ? <span class="number">0</span> : i + <span class="number">2</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">HSV2HEX</span>(<span class="params">h, s, v</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> h = h &gt; <span class="number">359</span> ? <span class="number">0</span> : h</span><br><span class="line">  <span class="keyword">var</span> s = s / <span class="number">100</span></span><br><span class="line">  <span class="keyword">var</span> v = v / <span class="number">100</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> h1 = <span class="built_in">Math</span>.floor(h / <span class="number">60</span>) % <span class="number">6</span></span><br><span class="line">  <span class="keyword">let</span> f = h / <span class="number">60</span> - h1</span><br><span class="line">  <span class="keyword">let</span> p = v * (<span class="number">1</span> - s)</span><br><span class="line">  <span class="keyword">let</span> q = v * (<span class="number">1</span> - f * s)</span><br><span class="line">  <span class="keyword">let</span> t = v * (<span class="number">1</span> - (<span class="number">1</span> - f) * s)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (h1 === <span class="number">0</span>) &#123;</span><br><span class="line">    r = v</span><br><span class="line">    g = t</span><br><span class="line">    b = p</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (h1 === <span class="number">1</span>) &#123;</span><br><span class="line">    r = q</span><br><span class="line">    g = v</span><br><span class="line">    b = p</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (h1 === <span class="number">2</span>) &#123;</span><br><span class="line">    r = p</span><br><span class="line">    g = v</span><br><span class="line">    b = t</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (h1 === <span class="number">3</span>) &#123;</span><br><span class="line">    r = p</span><br><span class="line">    g = q</span><br><span class="line">    b = v</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (h1 === <span class="number">4</span>) &#123;</span><br><span class="line">    r = t</span><br><span class="line">    g = p</span><br><span class="line">    b = v</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (h1 === <span class="number">5</span>) &#123;</span><br><span class="line">    r = v</span><br><span class="line">    g = p</span><br><span class="line">    b = q</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> r = r * <span class="number">255</span></span><br><span class="line">  <span class="keyword">let</span> g = g * <span class="number">255</span></span><br><span class="line">  <span class="keyword">let</span> b = b * <span class="number">255</span></span><br><span class="line">  <span class="keyword">let</span> RGB = [<span class="built_in">Math</span>.ceil(r), <span class="built_in">Math</span>.ceil(g), <span class="built_in">Math</span>.ceil(b)]</span><br><span class="line">  <span class="keyword">let</span> HEX = <span class="string">&quot;#&quot;</span> + RGB2HEX(r, g, b)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> HEX</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">RGB2HEX</span>(<span class="params">r, g, b</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> r_ = <span class="built_in">Math</span>.ceil(r).toString(<span class="number">16</span>)</span><br><span class="line">  <span class="keyword">let</span> g_ = <span class="built_in">Math</span>.ceil(g).toString(<span class="number">16</span>)</span><br><span class="line">  <span class="keyword">let</span> b_ = <span class="built_in">Math</span>.ceil(b).toString(<span class="number">16</span>)</span><br><span class="line">  <span class="keyword">let</span> h = r_.length &lt; <span class="number">2</span> ? <span class="string">&quot;0&quot;</span> + r_ : r_</span><br><span class="line">  <span class="keyword">let</span> e = g_.length &lt; <span class="number">2</span> ? <span class="string">&quot;0&quot;</span> + g_ : g_</span><br><span class="line">  <span class="keyword">let</span> x = b_.length &lt; <span class="number">2</span> ? <span class="string">&quot;0&quot;</span> + b_ : b_</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> HEX = (h.toUpperCase() + e.toUpperCase() + x.toUpperCase())</span><br><span class="line">  <span class="keyword">return</span> HEX</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Coding"><a href="#Coding" class="headerlink" title="Coding"></a>Coding</h1><p>实时计算颜色数值后，我们只需要在画布上添加一个渐变的图层<code>gradient</code>。</p><p>然后写入渐变层的<code>colors</code>。</p><p>最后再在最上面覆盖一层PS制作的镂空字体层即可。</p><p>附上测试脚本：</p><p><a href="https://raw.githubusercontent.com/ZiGmaX809/JsBoxLib/master/Other/Gradient/%E6%B8%90%E5%8F%98.js">渐变Demo</a></p><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p>最后贴一个效果图</p><p><img src="http://zigma-pic.test.upcdn.net/blog/sudden//1.gif" alt="gif"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;在制作Light Store的过程中萌发了很多有意思的想法。&lt;/p&gt;
&lt;p&gt;也制作了几个比较有意思的动画，虽然很多人会以为里面的动画是GIF</summary>
      
    
    
    
    <category term="JSBox" scheme="http://www.zigma.cc/categories/JSBox/"/>
    
    
    <category term="JSBox" scheme="http://www.zigma.cc/tags/JSBox/"/>
    
  </entry>
  
  <entry>
    <title>【iOS】百度输入法GBoard自用皮肤</title>
    <link href="http://www.zigma.cc/2018/07/23/%E3%80%90iOS%E3%80%91%E7%99%BE%E5%BA%A6%E8%BE%93%E5%85%A5%E6%B3%95GBoard%E8%87%AA%E7%94%A8%E7%9A%AE%E8%82%A4/"/>
    <id>http://www.zigma.cc/2018/07/23/%E3%80%90iOS%E3%80%91%E7%99%BE%E5%BA%A6%E8%BE%93%E5%85%A5%E6%B3%95GBoard%E8%87%AA%E7%94%A8%E7%9A%AE%E8%82%A4/</id>
    <published>2018-07-23T14:23:59.000Z</published>
    <updated>2018-11-17T05:43:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>虽然很不喜欢用百度的产品，但是在输入法上面也就三家大厂三分天下（百度、搜狗、讯飞）。</p><p>之前用的落格，被词库劝退，一开始也忍了，之后几波更新，每更新一次就会出现一点小毛病，关键还不敢重装，重装其他数据也没了。</p><p>无奈只能回去用所谓的“智能输入法”，虽然这类大厂的输入法布局是真的不敢恭维，什么都往里塞。</p><ul><li>讯飞也是伤在词库。</li><li>搜狗无法改变布局。</li><li>只能选择能改布局的百度了。</li></ul><p>选了一款比较喜欢的GBoard在修改布局后的百度输入法用的还算顺手，只是切换英文略微弱智。</p><ul><li>去除了26键键盘无用的“符”按钮，整合到了L键，上划为表情面板，下划为符号面板。</li><li>去除了26键键盘空格右边无用的标点按钮。</li><li>移动26键键盘中英切换按钮、切换键盘到原生键盘相同位置。</li><li>去除九宫格清空按钮，并移动中英切换和数字位置。</li><li>大幅度加长空格键，减少输入完成后选词误按乱七八糟的按钮的情况。</li><li>略微增加回车键大小，减少发送时误触其他按钮情况。</li><li>修改26键对应的符号键，有些有上下滑功能，但是无法显示，可以自己尝试。</li></ul><h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><p>2018/11/13 更新iPhone X版，去除了小地球，加大了空格。</p><p>（这个皮肤只是自用分享，如果需要更改适配其他键盘，请自便）</p><h1 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h1><p><img src="http://zigma-pic.test.upcdn.net/blog/gboard/1.jpg" alt="1"></p><p><img src="http://zigma-pic.test.upcdn.net/blog/gboard/2.jpg" alt="2"></p><p><img src="http://zigma-pic.test.upcdn.net/blog/gboard/3.jpg" alt="3"></p><p><img src="http://zigma-pic.test.upcdn.net/blog/gboard/4.jpg" alt="4"></p><p><img src="http://zigma-pic.test.upcdn.net/blog/gboard/5.jpg" alt="5"></p><h1 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h1><p><a href="https://pan.baidu.com/s/1cffSfp1FkPXM_ZTfB1qKmA">G_Board皮肤</a></p><h3 id="食用方法"><a href="#食用方法" class="headerlink" title="食用方法"></a>食用方法</h3><p>利用微信等程序传到手机，点击用其他应用打开，选择百度输入法后跳转选择即可使用。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;虽然很不喜欢用百度的产品，但是在输入法上面也就三家大厂三分天下（百度、搜狗、讯飞）。&lt;/p&gt;
&lt;p&gt;之前用的落格，被词库劝退，一开始也忍了，</summary>
      
    
    
    
    
    <category term="皮肤" scheme="http://www.zigma.cc/tags/%E7%9A%AE%E8%82%A4/"/>
    
    <category term="iOS" scheme="http://www.zigma.cc/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>【JSBox】Light Store第三方轻量商店</title>
    <link href="http://www.zigma.cc/2018/07/21/%E3%80%90JSBox%E3%80%91Light-Store%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%BB%E9%87%8F%E5%95%86%E5%BA%97/"/>
    <id>http://www.zigma.cc/2018/07/21/%E3%80%90JSBox%E3%80%91Light-Store%E7%AC%AC%E4%B8%89%E6%96%B9%E8%BD%BB%E9%87%8F%E5%95%86%E5%BA%97/</id>
    <published>2018-07-20T17:11:35.000Z</published>
    <updated>2018-11-09T11:47:09.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>JSBox脚本分发有点麻烦，除了TG群分享和社区发帖似乎没有别的途径，所以最近断断续续写了一个JSBox的三方轻量商店。（虽然还没写完的时候，钟大开始推出了官方商店投稿）</p><p>这是第一个测试版，仅在7/7P机型上测试，X和SE等机型还未测试，欢迎反馈。</p><ul><li>如果报错”未找到变量”，请关闭严格模式。</li></ul><h1 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h1><p>此项目收录的脚本，除了一些自己写的，其余均来自与社区或者TG群，亦会标注原作者及原帖地址，如果脚本作者认为有版权或者其他问题的，请及时联系我们进行删除。</p><h1 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h1><p><img src="http://zigma-pic.test.upcdn.net/blog/lightstore/6.jpg" alt="6"></p><p><img src="http://zigma-pic.test.upcdn.net/blog/lightstore/2.jpg" alt="2"></p><p><img src="http://zigma-pic.test.upcdn.net/blog/lightstore/1.jpg" alt="1"></p><p><img src="http://zigma-pic.test.upcdn.net/blog/lightstore/3.jpg" alt="3"></p><p><img src="http://zigma-pic.test.upcdn.net/blog/lightstore/4.jpg" alt="4"></p><p><img src="http://zigma-pic.test.upcdn.net/blog/lightstore/5.jpg" alt="5"></p><h1 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h1><p><a href="https://xteko.com/redir?name=Light%20Store&url=https://raw.githubusercontent.com/ZiGmaX809/JsBoxLib/master/Light_Store/Light%2520Store.box">Light Store</a></p><h1 id="FLAG"><a href="#FLAG" class="headerlink" title="FLAG"></a>FLAG</h1><ul><li><del>增加下载统计</del></li><li><del>增加时下热门排行</del></li></ul><h1 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h1><p>#2018/7/21 </p><p>V1.0.1 更新部分相关更新。</p><p>V1.0.2 增加双击首页回到页首功能；详情页原帖地址按钮底色修改。</p><p>#2018/7/22 </p><p>V1.0.3 增加更新详情提示；适配iPhoneX；双击首页回到页首会造成卡顿，暂时取消；优化提示信息选项。</p><p>#2018/7/23</p><p>V1.0.4 新增首页逆序显示选项，方便了解、查看新增脚本；修复更新页无法上下滑动问题 。</p><p>#2018/7/25</p><p>V1.0.5 新增清除缓存按钮；新增长按首页显示商店脚本总数功能。</p><p>#2018/7/26</p><p>V1.0.6 修复搜索标题返回无结果的错误。</p><p>#2018/7/29</p><p>V2.0.0 增加热门排行，首页将会显示下载排行前十的脚本（左右滑动浏览卡片）；脚本简介引入Markdown语法，排版更加舒适；详情页增加下载量显示；后台增加装机量统计；设置页面增加打赏感谢名单。</p><p>#2018/7/31</p><p>V2.0.1 增加炫酷动画；优化标题栏；优化详情页（感谢Josscii老哥支援滑动返回解决方案）；优化排行榜第123名显示方式；尝试适配iPad。</p><p>#2018/7/31</p><p>V2.0.2 修复设置页面卡滑动BUG；修复自定义颜色模式启动动画闪屏的问题；修复商店版侧滑返回失效问题；增强搜索忽略大小写功能；修复IphoneX菜单栏留空不足问题；增加随机到喜欢的颜色，关闭随机颜色（提示重启先取消）后可直接选取当前颜色为自定义颜色的功能；修复相关脚本安装图标错误问题；后台装机信息策略优化；增加缓存清理选项；微调启动动画颜色。</p><p>#2018/8/1 </p><p>V2.0.3 启动动画优化；菜单栏优化；无网络下的启动动画优化。 </p><p>#2018/8/2</p><p>V2.0.4 修复无法统计新装用户的错误。</p><p>#2018/8/2</p><p>V2.0.5 启动动画优化；iPhoneX标题栏微调；代码优化；修复连续点击清除缓存造成崩溃的问题。</p><p>#2018/8/8</p><p>V2.0.6 更换服务器地址；优化iPad上标题栏显示。 </p><p>#2018/8/18</p><p>V2.0.7 增加去除导航栏开关；优化iPhone X适配。 </p><p>#2018/8/19</p><p>V2.0.8 更改脚本安装方式；增加安装Loading动画；优化启动动画随机颜色。</p><p>#2018/8/21 </p><p>V2.0.9 一些UI优化；移除设置里面无用的检测更新；增加了无法进入商店时提示更新脚本功能；增加脚本安装失败提示；代码规整工作；本体更新相关优化。</p><p>#2018/8/23 </p><p>V2.1.0 修复搜索无法工作的问题；优化下载量统计。 </p><p>#2018/8/23 </p><p>V2.1.1 修复100以后脚本无法显示下载量的错误。</p><p>#2018/9/2 </p><p>V2.1.2 修复某些脚本详情里面出现空原贴链接问题；应作者要求下架已失效的moreSound，如有需要请下载ACPlayer；修复下架脚本后排行榜错乱问题，建议更新。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;JSBox脚本分发有点麻烦，除了TG群分享和社区发帖似乎没有别的途径，所以最近断断续续写了一个JSBox的三方轻量商店。（虽然还没写完的时候</summary>
      
    
    
    
    
    <category term="JSBox" scheme="http://www.zigma.cc/tags/JSBox/"/>
    
  </entry>
  
  <entry>
    <title>【Hexo】从Wordpress转Hexo的那些深坑</title>
    <link href="http://www.zigma.cc/2018/06/27/%E3%80%90Hexo%E3%80%91%E4%BB%8EWordpress%E8%BD%ACHexo%E7%9A%84%E9%82%A3%E4%BA%9B%E6%B7%B1%E5%9D%91/"/>
    <id>http://www.zigma.cc/2018/06/27/%E3%80%90Hexo%E3%80%91%E4%BB%8EWordpress%E8%BD%ACHexo%E7%9A%84%E9%82%A3%E4%BA%9B%E6%B7%B1%E5%9D%91/</id>
    <published>2018-06-27T14:44:12.000Z</published>
    <updated>2020-05-31T14:34:26.395Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>昨天作死开始了从wp到Hexo的迁移之旅，网上大部分Hexo搭建教程都还停留在2017年甚至2016年，所以整个迁移过程历尽深坑不断。</p><p>因此我觉得有必要记录一下自己所踩过的那些深坑。</p><p>具体有以下几点：</p><ul><li>搬瓦工ssh端口；</li><li>ssh公钥和秘钥问题；</li><li>VPS文件/文件夹权限问题；</li><li>post-receive钩子无法正常执行的问题；</li></ul><p>主要参考：</p><p><a href="http://skyhacks.org/2017/07/21/UseHexoToBuildBlog/">Hexo环境搭建个人博客</a></p><p><a href="https://calton007.github.io/2018/05/08/n-deploy-vps/">使用 Git Hook 自动部署 Hexo 到个人 VPS </a></p><h1 id="填坑开始"><a href="#填坑开始" class="headerlink" title="填坑开始"></a>填坑开始</h1><p>Hexo的基本运行逻辑就是本地编写Markdown文档——利用Git生成html页面——利用Git推送到VPS——VPS再通过Git钩子发布到Nignx配置文件夹发布。</p><h2 id="一、本地环境搭建"><a href="#一、本地环境搭建" class="headerlink" title="一、本地环境搭建"></a>一、本地环境搭建</h2><h3 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h3><p>在<a href="https://nodejs.org/en/download/">Node.js</a>官网下载对应版本一路next安装即可。</p><h3 id="安装Git环境"><a href="#安装Git环境" class="headerlink" title="安装Git环境"></a>安装Git环境</h3><p>同样在<a href="https://git-scm.com/download/win">Git For Windows</a>下载后一路next安装。</p><p>根据前述参考文章是需要<a href="http://www.brafox.com/post/2015/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/git-%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE.html">配置环境变量</a>的，但是我本地的Git是因为VS Code才安装的，并没有设置环境变量。虽然也能用但是无法排除本文所提的深坑是因此而出现，所以还是建议配置一下。</p><p>安装完Git，需要生成ssh密钥，但是我们先要设置Git用户名，从开始菜单中运行Git Bash。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;你的用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的邮箱地址&quot;</span><br></pre></td></tr></table></figure><p>设置完成后继续生成ssh密钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的邮箱地址&quot;</span><br></pre></td></tr></table></figure><p>完成后打开目录<code>C:\Users\XXX\.ssh\ </code>内的<code>id_rsa.pub </code>文件备用。</p><h3 id="创建本地目录"><a href="#创建本地目录" class="headerlink" title="创建本地目录"></a>创建本地目录</h3><p>在电脑任意位置创建文件夹作为本地目录用以写作，例如我就是以<code>D:\Hexo\</code>为本地目录。</p><p>在此目录下右键点击<code>Git Bash Here</code>后<strong>分别执行</strong>以下命令以安装Hexo：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">hexo init</span><br><span class="line">npm install</span><br><span class="line">hexo d -fg</span><br></pre></td></tr></table></figure><p>完成后可以在<code>D:\Hexo\</code>目录下看到已有本地文件生成，继续在Git命令窗口输入<code>hexo s</code>运行本地服务器，看到提示有<code>http://localhost:4000 </code>后在浏览器打开该地址已验证本地是否部署成功。</p><h2 id="二、VPS环境部署"><a href="#二、VPS环境部署" class="headerlink" title="二、VPS环境部署"></a>二、VPS环境部署</h2><p>VPS系统我选择的是Centos 7，因为发现Centos 6安装Nginx十分复杂。</p><h3 id="1、安装Nginx"><a href="#1、安装Nginx" class="headerlink" title="1、安装Nginx"></a>1、安装Nginx</h3><h4 id="·-添加Nginx到YUM源"><a href="#·-添加Nginx到YUM源" class="headerlink" title="· 添加Nginx到YUM源"></a>· 添加Nginx到YUM源</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span><br></pre></td></tr></table></figure><h4 id="·-安装Nginx"><a href="#·-安装Nginx" class="headerlink" title="· 安装Nginx"></a>· 安装Nginx</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y nginx</span><br></pre></td></tr></table></figure><h4 id="·-配置Nginx"><a href="#·-配置Nginx" class="headerlink" title="· 配置Nginx"></a>· 配置Nginx</h4><p>利用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/nginx/conf.d/default.conf</span><br></pre></td></tr></table></figure><p>编辑<code>default.conf</code>文件，插入如下代码（需要自行更改<code>server_name example.com www.example.com;</code>，其他的路径可以不改动）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80 ;</span><br><span class="line">    root /var/www/hexo; //这里可以改成你的网站目录地址，我将网站放在/var/www/hexo</span><br><span class="line">    server_name example.com www.example.com; //这里输入你的域名或IP地址</span><br><span class="line">    access_log  /var/log/nginx/hexo_access.log; //这里的log文件也可以根据自己网站名字替换</span><br><span class="line">    error_log   /var/log/nginx/hexo_error.log; //这里的log文件也可以根据自己网站名字替换</span><br><span class="line">    location ~* ^.+\.(ico|gif|jpg|jpeg|png)$ &#123;</span><br><span class="line">            root /var/www/hexo; //网站目录地址</span><br><span class="line">            access_log   off;</span><br><span class="line">            expires      1d;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~* ^.+\.(css|js|txt|xml|swf|wav)$ &#123;</span><br><span class="line">        root /var/www/hexo; //网站目录地址</span><br><span class="line">        access_log   off;</span><br><span class="line">        expires      10m;</span><br><span class="line">    &#125;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root /var/www/hexo; //网站目录地址</span><br><span class="line">        if (-f $request_filename) &#123;</span><br><span class="line">            rewrite ^/(.*)$  /$1 break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后利用<code>service nginx restart </code>重启Nginx服务。</p><h4 id="·-设置Nginx开机自启"><a href="#·-设置Nginx开机自启" class="headerlink" title="· 设置Nginx开机自启"></a>· 设置Nginx开机自启</h4><p>像上面安装完以后Nginx并不会开机自动启动，手动启动就比较麻烦了，因此我们需要设置其开机自动启动。</p><p>利用命令建立Nginx脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/init.d/nginx</span><br></pre></td></tr></table></figure><p>然后添加命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">#</span><br><span class="line"># nginx - this script starts and stops the nginx daemon</span><br><span class="line">#</span><br><span class="line"># chkconfig:   - 85 15</span><br><span class="line"># description:  NGINX is an HTTP(S) server, HTTP(S) reverse \</span><br><span class="line">#               proxy and IMAP/POP3 proxy server</span><br><span class="line"># processname: nginx</span><br><span class="line"># config:      /etc/nginx/nginx.conf</span><br><span class="line"># config:      /etc/sysconfig/nginx</span><br><span class="line"># pidfile:     /var/run/nginx.pid</span><br><span class="line"># Source function library.</span><br><span class="line">. /etc/rc.d/init.d/functions</span><br><span class="line"># Source networking configuration.</span><br><span class="line">. /etc/sysconfig/network</span><br><span class="line"># Check that networking is up.</span><br><span class="line">[ &quot;$NETWORKING&quot; = &quot;no&quot; ] &amp;&amp; exit 0</span><br><span class="line">nginx=&quot;/usr/sbin/nginx&quot;</span><br><span class="line">prog=$(basename $nginx)</span><br><span class="line">NGINX_CONF_FILE=&quot;/etc/nginx/nginx.conf&quot;</span><br><span class="line">[ -f /etc/sysconfig/nginx ] &amp;&amp; . /etc/sysconfig/nginx</span><br><span class="line">lockfile=/var/lock/subsys/nginx</span><br><span class="line">make_dirs() &#123;</span><br><span class="line">   # make required directories</span><br><span class="line">   user=`$nginx -V 2&gt;&amp;1 | grep &quot;configure arguments:&quot; | sed &#x27;s/[^*]*--user=\([^ ]*\).*/\1/g&#x27; -`</span><br><span class="line">   if [ -z &quot;`grep $user /etc/passwd`&quot; ]; then</span><br><span class="line">       useradd -M -s /bin/nologin $user</span><br><span class="line">   fi</span><br><span class="line">   options=`$nginx -V 2&gt;&amp;1 | grep &#x27;configure arguments:&#x27;`</span><br><span class="line">   for opt in $options; do</span><br><span class="line">       if [ `echo $opt | grep &#x27;.*-temp-path&#x27;` ]; then</span><br><span class="line">           value=`echo $opt | cut -d &quot;=&quot; -f 2`</span><br><span class="line">           if [ ! -d &quot;$value&quot; ]; then</span><br><span class="line">               # echo &quot;creating&quot; $value</span><br><span class="line">               mkdir -p $value &amp;&amp; chown -R $user $value</span><br><span class="line">           fi</span><br><span class="line">       fi</span><br><span class="line">   done</span><br><span class="line">&#125;</span><br><span class="line">start() &#123;</span><br><span class="line">    [ -x $nginx ] || exit 5</span><br><span class="line">    [ -f $NGINX_CONF_FILE ] || exit 6</span><br><span class="line">    make_dirs</span><br><span class="line">    echo -n $&quot;Starting $prog: &quot;</span><br><span class="line">    daemon $nginx -c $NGINX_CONF_FILE</span><br><span class="line">    retval=$?</span><br><span class="line">    echo</span><br><span class="line">    [ $retval -eq 0 ] &amp;&amp; touch $lockfile</span><br><span class="line">    return $retval</span><br><span class="line">&#125;</span><br><span class="line">stop() &#123;</span><br><span class="line">    echo -n $&quot;Stopping $prog: &quot;</span><br><span class="line">    killproc $prog -QUIT</span><br><span class="line">    retval=$?</span><br><span class="line">    echo</span><br><span class="line">    [ $retval -eq 0 ] &amp;&amp; rm -f $lockfile</span><br><span class="line">    return $retval</span><br><span class="line">&#125;</span><br><span class="line">restart() &#123;</span><br><span class="line">    configtest || return $?</span><br><span class="line">    stop</span><br><span class="line">    sleep 1</span><br><span class="line">    start</span><br><span class="line">&#125;</span><br><span class="line">reload() &#123;</span><br><span class="line">    configtest || return $?</span><br><span class="line">    echo -n $&quot;Reloading $prog: &quot;</span><br><span class="line">    killproc $nginx -HUP</span><br><span class="line">    RETVAL=$?</span><br><span class="line">    echo</span><br><span class="line">&#125;</span><br><span class="line">force_reload() &#123;</span><br><span class="line">    restart</span><br><span class="line">&#125;</span><br><span class="line">configtest() &#123;</span><br><span class="line">  $nginx -t -c $NGINX_CONF_FILE</span><br><span class="line">&#125;</span><br><span class="line">rh_status() &#123;</span><br><span class="line">    status $prog</span><br><span class="line">&#125;</span><br><span class="line">rh_status_q() &#123;</span><br><span class="line">    rh_status &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">&#125;</span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">    start)</span><br><span class="line">        rh_status_q &amp;&amp; exit 0</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        rh_status_q || exit 0</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    restart|configtest)</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    reload)</span><br><span class="line">        rh_status_q || exit 7</span><br><span class="line">        $1</span><br><span class="line">        ;;</span><br><span class="line">    force-reload)</span><br><span class="line">        force_reload</span><br><span class="line">        ;;</span><br><span class="line">    status)</span><br><span class="line">        rh_status</span><br><span class="line">        ;;</span><br><span class="line">    condrestart|try-restart)</span><br><span class="line">        rh_status_q || exit 0</span><br><span class="line">            ;;</span><br><span class="line">    *)</span><br><span class="line">        echo $&quot;Usage: $0 &#123;start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest&#125;&quot;</span><br><span class="line">        exit 2</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>保存后设置可执行权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod a+x /etc/init.d/nginx</span><br></pre></td></tr></table></figure><p>添加chkconfig控制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --add /etc/init.d/nginx</span><br></pre></td></tr></table></figure><p>设置开机自启</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig nginx on</span><br></pre></td></tr></table></figure><h3 id="2、安装Git"><a href="#2、安装Git" class="headerlink" title="2、安装Git"></a>2、安装Git</h3><p>利用以下代码安装Git</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum update &amp;&amp; apt-get upgrade -y #更新内核</span><br><span class="line">yum install git-core</span><br></pre></td></tr></table></figure><h3 id="3、新建git用户并添加sudo权限"><a href="#3、新建git用户并添加sudo权限" class="headerlink" title="3、新建git用户并添加sudo权限"></a>3、新建git用户并添加sudo权限</h3><p>分别利用以下命令新建git用户、给<code>sudoers</code>文件提权、编辑。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">adduser git</span><br><span class="line">chmod 740 /etc/sudoers #改变权限值用于读写</span><br><span class="line">vi /etc/sudoers</span><br></pre></td></tr></table></figure><p>找到</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Allow root to run any commands anywhere</span></span></span><br><span class="line">root   ALL=(ALL)   ALL</span><br></pre></td></tr></table></figure><p>后在之后添加以下代码并保存。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git    ALL=(ALL)   ALL</span><br></pre></td></tr></table></figure><p>随后再将<code>sudoers</code>文件改回原来的权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 440 /etc/sudoers</span><br></pre></td></tr></table></figure><h3 id="4、配置ssh登录"><a href="#4、配置ssh登录" class="headerlink" title="4、配置ssh登录"></a>4、配置ssh登录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su git</span><br></pre></td></tr></table></figure><p>切换为git用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br><span class="line">mkdir .ssh &amp;&amp; cd .ssh</span><br><span class="line">touch authorized_keys</span><br><span class="line">vi authorized_keys // 在这个文件中粘贴进刚刚Winodws下申请的key（在id_rsa.pub文件中）</span><br></pre></td></tr></table></figure><p>因为搬瓦工的ssh端口是随机的，但是git默认使用22端口，我测试在本地修改config文件更换git通讯端口，但是效果并不好，所以我们需要将搬瓦工的ssh端口改回22，并且打开免密登录。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>找到以下代码前的#并删除。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RSAAuthentication yes</span><br><span class="line">PubkeyAuthentication yes</span><br></pre></td></tr></table></figure><p>并将最后的<code>Port xxxxx</code>改为<code>Port 22</code>。</p><p>最后！！！</p><p>需要设置.ssh文件夹和authorized_keys文件的权限，分别设置为700和600，不然永远无法push代码到服务器，这个坑足足坑了我一天。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br><span class="line">chmod 700 .ssh</span><br><span class="line">cd .ssh</span><br><span class="line">chmod 600 authorized_keys</span><br></pre></td></tr></table></figure><p>现在你可以在Git Bash使用<code>ssh git@你的VPS IP地址</code>测试能否登录，如果可以则代表前三个坑已经填完。</p><h3 id="5、初始化git仓库"><a href="#5、初始化git仓库" class="headerlink" title="5、初始化git仓库"></a>5、初始化git仓库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br><span class="line">mkdir hexo.git &amp;&amp; cd hexo.git</span><br><span class="line">git init --bare</span><br></pre></td></tr></table></figure><p>等待初始化完毕后，再创建网站目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /var/www</span><br><span class="line">mkdir hexo</span><br><span class="line">chown git:git -R /var/www/hexo</span><br></pre></td></tr></table></figure><h4 id="配置Git-Hooks"><a href="#配置Git-Hooks" class="headerlink" title="配置Git Hooks"></a>配置Git Hooks</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su git</span><br><span class="line">cd /home/git/hexo.git/hooks # 如果没有hooks目录,就mkdir hooks 自己建一个目录</span><br><span class="line">vi post-receive</span><br></pre></td></tr></table></figure><p>输入以下代码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --work-tree=/var/www/hexo --git-dir=/home/git/hexo.git checkout -f</span><br></pre></td></tr></table></figure><p>这里是最后一个坑，因为Hexo版本的更新，旧版的<code>post-receive</code>无效，所以需要用新方法。</p><p>然后赋予<code>post-receive</code>文件执行权限。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x post-receive</span><br></pre></td></tr></table></figure><p>最后将<code>hexo.git目录</code>所有权设置为git。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/git</span><br><span class="line">chown -R git:git hexo.git</span><br></pre></td></tr></table></figure><p>至此服务端配置完毕。</p><h2 id="三、Hexo配置"><a href="#三、Hexo配置" class="headerlink" title="三、Hexo配置"></a>三、Hexo配置</h2><p>修改 hexo 目录下的 <code>_config.yml</code> 文件，找到 <code>[deploy]</code> 条目，并修改为 </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">      type: git</span><br><span class="line">      repo: git@服务器地址:/home/git/hexo.git</span><br><span class="line">      branch: master</span><br></pre></td></tr></table></figure><p>至此，Hexo配置完毕，最后在本地<code>D:\Hexo</code>文件夹右键<code>Git Bash Here</code>运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>安装git的push插件，完成后再利用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>将本地目录生成静态网页并推送到VPS。</p><p>齐活。</p><h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><p>鉴于本文并不是在解决问题时撰写，而是成功后根据回忆和参考教程所写，因此在实际操作过程中会有一定出入，如有错误欢迎指正。</p><p>希望本文给折腾的你提供些许参考，而不是重复造轮子。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;昨天作死开始了从wp到Hexo的迁移之旅，网上大部分Hexo搭建教程都还停留在2017年甚至2016年，所以整个迁移过程历尽深坑不断。&lt;/p</summary>
      
    
    
    
    
    <category term="VPS" scheme="http://www.zigma.cc/tags/VPS/"/>
    
    <category term="Hexo" scheme="http://www.zigma.cc/tags/Hexo/"/>
    
    <category term="搬瓦工" scheme="http://www.zigma.cc/tags/%E6%90%AC%E7%93%A6%E5%B7%A5/"/>
    
  </entry>
  
  <entry>
    <title>【JSBox】超轻量级Aria2客户端</title>
    <link href="http://www.zigma.cc/2018/06/26/%E3%80%90JSBox%E3%80%91%E8%B6%85%E8%BD%BB%E9%87%8F%E7%BA%A7Aria2%E5%AE%A2%E6%88%B7%E7%AB%AF/"/>
    <id>http://www.zigma.cc/2018/06/26/%E3%80%90JSBox%E3%80%91%E8%B6%85%E8%BD%BB%E9%87%8F%E7%BA%A7Aria2%E5%AE%A2%E6%88%B7%E7%AB%AF/</id>
    <published>2018-06-26T15:40:07.000Z</published>
    <updated>2018-11-09T11:52:59.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>说是客户端，其实只有添加任务的功能。<br>不过即使是网页客户端，设置后重启也会重置，所以Aria2设置还是编辑conf文件比较妥当。<br>之前通过AriaNG提供的api写过一个类似脚本，但是没有设置界面，每次添加会有网页弹窗。<br>所以这次利用jsonrpc重写了一个。</p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul><li> 主应用界面是设置，填入rpc地址与token，完成后可以激活测试连接是否正确。</li><li> 分享面板和启动器均是添加任务。分享面板会直接添加选取的链接，为了保证进入主界面是设置界面，所以将粘贴板链接读取放在了启动器中。</li><li> 如何添加和设置Aria2下载端请Google，梅林可以参考我的另一篇博文<a href="http://www.zigma.cc/2018/05/17/%E3%80%90%E7%9E%8E%E6%8A%98%E8%85%BE%E3%80%91%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E5%88%A9%E7%94%A8entware%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85Aria2/">【瞎折腾】梅林固件利用entware环境安装Aria2</a>。</li></ul><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="http://zigma-pic.test.upcdn.net/blog/aria2/1.jpg" alt="p1"><br><img src="http://zigma-pic.test.upcdn.net/blog/aria2/2.jpg" alt="p2"></p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://xteko.com/redir?name=Aria2&amp;url=https://raw.githubusercontent.com/ZiGmaX809/JsBoxLib/master/Aria2/Aria2.box">Aria2</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;说是客户端，其实只有添加任务的功能。&lt;br&gt;不过即使是网页客户端，设置后重启也会重置，所以Aria2设置还是编辑conf文件比较妥当。&lt;br</summary>
      
    
    
    
    <category term="JSBox" scheme="http://www.zigma.cc/categories/JSBox/"/>
    
    
    <category term="JSBox" scheme="http://www.zigma.cc/tags/JSBox/"/>
    
  </entry>
  
  <entry>
    <title>【JSBox】Palette 调色板</title>
    <link href="http://www.zigma.cc/2018/06/26/%E3%80%90JSBox%E3%80%91Palette-%E8%B0%83%E8%89%B2%E6%9D%BF/"/>
    <id>http://www.zigma.cc/2018/06/26/%E3%80%90JSBox%E3%80%91Palette-%E8%B0%83%E8%89%B2%E6%9D%BF/</id>
    <published>2018-06-26T15:24:22.000Z</published>
    <updated>2018-11-09T11:47:47.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前写Days Pro时想要找几个配色，在App Store找了一圈相关的App，但是这类工具数量少的可怜，并且交互十分不友好，比如无法复制HEX、RGB值，再或者界面并未适配7P。</p><p>所以就按照其中比较好的一款写了个脚本，并且支持了直接复制颜色值，之前设计是想要支持查看历史记录的，但是在实际实现过程中，发现这个功能并不常用。而且如果实现这个比较鸡肋的功能，还要增加大量计算，权衡之下放弃了这个功能，当然也有可能是我水平不够，数据传导结构没做好。按照目前来看，现有日常使用已经绰绰有余。</p><p>选取图片颜色因为JsBox现在暂时还不支持触摸的动作，本人能力也有限，所以本项目不在考虑范围内。</p><h1 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h1><p>· 点击HEX和RGB值可以直接复制所显示的内容，包括#和()；<br>· 各条Slider都会随着数据变化而变化，因此RGB标签页想要查看颜色更加直观。</p><h1 id="安装链接"><a href="#安装链接" class="headerlink" title="安装链接"></a>安装链接</h1><p><a href="https://xteko.com/redir?name=Palette&amp;url=https://raw.githubusercontent.com/ZiGmaX809/JsBoxLib/master/Palette/Palette.box">Palette</a></p><h1 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h1><p><img src="http://zigma-pic.test.upcdn.net/blog/palette/1.png" alt="1" title="1"><br><img src="http://zigma-pic.test.upcdn.net/blog/palette/2.png" alt="2" title="2"><br><img src="http://zigma-pic.test.upcdn.net/blog/palette/3.png" alt="3" title="3"></p><h1 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h1><p>2018/6/3 V1.0.2 修复大量BUG</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;之前写Days Pro时想要找几个配色，在App Store找了一圈相关的App，但是这类工具数量少的可怜，并且交互十分不友好，比如无法复制</summary>
      
    
    
    
    <category term="JSBox" scheme="http://www.zigma.cc/categories/JSBox/"/>
    
    
    <category term="JSBox" scheme="http://www.zigma.cc/tags/JSBox/"/>
    
  </entry>
  
  <entry>
    <title>【JSBox】Days Pro</title>
    <link href="http://www.zigma.cc/2018/06/22/%E3%80%90JSBox%E3%80%91Days%20Pro/"/>
    <id>http://www.zigma.cc/2018/06/22/%E3%80%90JSBox%E3%80%91Days%20Pro/</id>
    <published>2018-06-22T15:01:15.000Z</published>
    <updated>2018-11-09T11:45:55.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前想填的倒数日的坑终于填了。 仿自”倒数日 Days”。  </p><p>理论可以计算到无限天数，但是超过5位数的天数背景会错乱（懒得适配）。 </p><ul><li>支持主题选择。 </li><li>主应用运行是设置，小组件运行是倒数界面。</li></ul><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="http://zigma-pic.test.upcdn.net/blog/dayspro/1.jpg" alt="1" title="1"><br><img src="http://zigma-pic.test.upcdn.net/blog/dayspro/4.jpg" alt="2" title="2"></p><h2 id="安装链接"><a href="#安装链接" class="headerlink" title="安装链接"></a>安装链接</h2><p><a href="https://xteko.com/redir?name=Days%20Pro&url=https://raw.githubusercontent.com/ZiGmaX809/JsBoxLib/master/Days_Pro/Days%2520Pro.box" title="Days_Pro">Days_Pro</a></p><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><p>#2018/6/5 </p><p>V 1.0.2 增加节假日模式、多色彩主题自定义； Bug修复。 </p><p>#2018/6/12 </p><p>V 1.0.3 调整对emoji字符长度识别以优化长度限制； 调整主题选择； 调整到达事件当天显示方式。 </p><p>#2018/6/22 </p><p>V 1.0.4 修正节假日模式到达假日当天显示方式。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;之前想填的倒数日的坑终于填了。 仿自”倒数日 Days”。  &lt;/p&gt;
&lt;p&gt;理论可以计算到无限天数，但是超过5位数的天数背景会错乱（懒得适</summary>
      
    
    
    
    <category term="JSBox" scheme="http://www.zigma.cc/categories/JSBox/"/>
    
    
    <category term="JSBox" scheme="http://www.zigma.cc/tags/JSBox/"/>
    
  </entry>
  
  <entry>
    <title>【JSBox】SysInfo Pro</title>
    <link href="http://www.zigma.cc/2018/05/26/%E3%80%90JSBox%E3%80%91SysInfo%20Pro/"/>
    <id>http://www.zigma.cc/2018/05/26/%E3%80%90JSBox%E3%80%91SysInfo%20Pro/</id>
    <published>2018-05-26T13:06:32.000Z</published>
    <updated>2018-11-09T11:48:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>根据之前TG群的Netspeed（找不到作者了）和RYAN大佬的Progress按照App——SYS PRO制作。 </p><p>可以查看当前网速、局域网外网IP、设备名称、iOS版本、磁盘剩余、内存占用等情况。 可以点击界面来切换显示的系统信息和网络信息。 </p><p>目前已知的问题： </p><ol><li>硬盘剩余与实际不符； </li><li>内存占用可能也存在同样的情况，但是总体差不多，没1那么夸张； </li><li>内存占用的百分比在某些情况下会出现N多位小数。</li></ol><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p><del>（三条都不是我的锅）</del>，对不起第三条的确是我的锅。 1和2的问题，是JSBox的返回值就是这样，可以自行利用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ui.alert($device.space)</span><br></pre></td></tr></table></figure><p>查看。 </p><p><del>3的问题仅会偶尔在刚启动出现一下，暂时找不到原因，不影响使用。</del></p><p>会经常出现，已经修复。</p><h2 id="附安装地址"><a href="#附安装地址" class="headerlink" title="附安装地址"></a>附安装地址</h2><p><a href="http://zigma.qiniudn.com//js/s1/SysInfo%20Pro.box" title="SysInfo Pro">SysInfo Pro</a></p><h2 id="附图"><a href="#附图" class="headerlink" title="附图"></a>附图</h2><p><img src="http://zigma-pic.test.upcdn.net/blog/sysinfopro/1.jpg"><br><img src="http://zigma-pic.test.upcdn.net/blog/sysinfopro/2.jpg"><br><img src="http://zigma-pic.test.upcdn.net/blog/sysinfopro/3.jpg"><br><img src="http://zigma-pic.test.upcdn.net/blog/sysinfopro/4.jpg"></p><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><p>2018/5/26更新1.0.1 修复出现NNNNN多小数点的问题。 </p><p>2018/5/27更新1.0.2 限制SSID长度以解决字符叠加。 </p><p>2018/5/27更新1.0.3 修复外网IP偶尔的排版错误。 </p><p>2018/6/12更新1.0.4 适配SE机型，以及其他机型适配优化。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;根据之前TG群的Netspeed（找不到作者了）和RYAN大佬的Progress按照App——SYS PRO制作。 &lt;/p&gt;
&lt;p&gt;可以查看</summary>
      
    
    
    
    <category term="JSBox" scheme="http://www.zigma.cc/categories/JSBox/"/>
    
    
    <category term="JSBox" scheme="http://www.zigma.cc/tags/JSBox/"/>
    
  </entry>
  
  <entry>
    <title>梅林固件利用entware环境安装Aria2</title>
    <link href="http://www.zigma.cc/2018/05/17/%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E5%88%A9%E7%94%A8entware%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85Aria2/"/>
    <id>http://www.zigma.cc/2018/05/17/%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E5%88%A9%E7%94%A8entware%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85Aria2/</id>
    <published>2018-05-17T11:53:02.000Z</published>
    <updated>2022-01-04T03:10:51.638Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前折腾了一下小宝固件软件中心的Aria2，安装是方便了，但是问题也不少。</p><ul><li><p>Bug不少，经常莫名其妙假死。</p></li><li><p>添加设置需要在面板进行，如果是改conf文件，面板里面一提交，conf就会被重写。 </p></li><li><p>第二点就导致了自动更新tarcker列表的脚本无法执行。 </p></li><li><p>更新需要等待适配。</p></li></ul><p>今天看论坛有大佬编译了1.34的版本，所以就想舍弃软件中心版，直接自己安装。 虽然看不到了面板那么详细的数据，但是总体还不错。</p><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="自动挂载U盘"><a href="#自动挂载U盘" class="headerlink" title="自动挂载U盘"></a>自动挂载U盘</h2><p>因为之前直接安装Aria2到路由，运行一段时间重启后会导致opt文件夹软链丢失，造成Aria2无法启动和运行。所以想用其他方法，然后看到了<a href="https://blog.bluerain.io/p/AsusWrt-Merlin.html" title="这篇文章">这篇文章</a>，将opt文件夹链接到U盘，运行了一天十分稳定，重启后也不会丢失opt文件夹。 插上U盘，执行 df 命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ZiGma@RT-AC86U-8450:/tmp/home/root# df</span><br><span class="line">Filesystem           1K-blocks      Used Available Use% Mounted on</span><br><span class="line">ubi:rootfs_ubifs         79016     56648     22368  72% /</span><br><span class="line">mtd:bootfs                4480      3348      1132  75% /bootfs</span><br><span class="line">mtd:data                  8192       624      7568   8% /data</span><br><span class="line">/dev/mtdblock8           49152     18256     30896  37% /jffs</span><br><span class="line">/dev/sda1              7315130         5   6920322   0% /tmp/mnt/sda1</span><br><span class="line">/dev/sda             488384508 100183552 388200956  21% /tmp/mnt/Disk</span><br></pre></td></tr></table></figure><p>可以看到U盘路径是/tmp/mnt/sda1。 所以直接运行以下代码进行挂载。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt; EOF &gt; /tmp/script_usbmount.tmp</span><br><span class="line">if [ \$1 = &quot;/tmp/mnt/sda1&quot; ]</span><br><span class="line">then</span><br><span class="line">ln -sf \$1 /tmp/opt</span><br><span class="line">/opt/etc/init.d/rc.unslung start</span><br><span class="line">fi</span><br><span class="line">EOF</span><br><span class="line">nvram set script_usbmount=&quot;`cat /tmp/script_usbmount.tmp`&quot;</span><br><span class="line">cat &lt;&lt; EOF &gt; /tmp/script_usbumount.tmp</span><br><span class="line">if [ \$1 = &quot;/tmp/mnt/sda1&quot; ]</span><br><span class="line">then</span><br><span class="line">/opt/etc/init.d/rc.unslung stop</span><br><span class="line">fi</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>继续执行以下代码后重启。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvram set script_usbumount=&quot;`cat /tmp/script_usbumount.tmp`&quot;</span><br><span class="line">nvram commit </span><br></pre></td></tr></table></figure><h2 id="绑定挂载U盘"><a href="#绑定挂载U盘" class="headerlink" title="绑定挂载U盘"></a>绑定挂载U盘</h2><p>使用过程中，重启之后发现Aria2没有运行，查看了进程也无法找到，也无法使用命令启动。 查了一下才发现U盘挂载点已经变成了/tmp/mnt/sdb1，所以要将U盘固定到盘符。 先利用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blkid</span><br></pre></td></tr></table></figure><p>查看已经挂载的所有硬盘的UUID。 可以看到</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/dev/sda1: UUID=&quot;e5fff8c8-c1f1-d301-60ff-f8c8c1f1d301&quot;</span><br><span class="line">/dev/sdb: LABEL=&quot;Disk&quot; UUID=&quot;528629456341BE39&quot;</span><br></pre></td></tr></table></figure><p>需要注意的是要在正常挂载的情况下操作。 然后编辑/etc/fstab文件，添加：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UUID=e5fff8c8-c1f1-d301-60ff-f8c8c1f1d301 /dev/sda1 ext4 defaults 0 0</span><br></pre></td></tr></table></figure><p>说明一下字段意义： - UUID - 挂载位置 - 格式 - 挂载参数（具体参考mount -o命令选项） - 是否需要dump备份 - 系统启动时进行磁盘检查的顺序</p><h2 id="安装entware环境"><a href="#安装entware环境" class="headerlink" title="安装entware环境"></a>安装entware环境</h2><p>将entware环境安装到上述的U盘中。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">entware-setup.sh</span><br></pre></td></tr></table></figure><p>安装完成后可以用cd /opt/查看，一般来讲是可以看到U盘目录，继续用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opkg update</span><br></pre></td></tr></table></figure><p>更新仓库索引到本地。</p><h2 id="安装虚拟内存"><a href="#安装虚拟内存" class="headerlink" title="安装虚拟内存"></a>安装虚拟内存</h2><p>因为在查找原因时，有反应说软件中心的虚拟内存和entware环境下的Aria2有冲突，所以虚拟内存在这里进行安装。 依次执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/dev/zero of=/tmp/mnt/sda1/swapfile bs=1024 count=512000</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkswap /tmp/mnt/sda1/swapfile </span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapon /tmp/mnt/sda1/swapfile</span><br></pre></td></tr></table></figure><p>创建启动脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Turn On Usage Of Swapfile</span></span><br><span class="line">if [ -f &quot;/tmp/mnt/sda1/swapfile&quot; ];then</span><br><span class="line">swapon /tmp/mnt/sda1/swapfile</span><br><span class="line">echo &quot;Turning Swapfile On&quot;</span><br><span class="line">fi</span><br><span class="line">&#x27; &gt;&gt; /jffs/scripts/post-mount</span><br></pre></td></tr></table></figure><h2 id="安装Aria2"><a href="#安装Aria2" class="headerlink" title="安装Aria2"></a>安装Aria2</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opkg install aria2</span><br></pre></td></tr></table></figure><h2 id="配置conf文件"><a href="#配置conf文件" class="headerlink" title="配置conf文件"></a>配置conf文件</h2><p>可以直接用WinSCP直接修改/opt/etc/aria2.conf文件。 也可以直接用我的，需要自己修改下载路径和Token。 (dir=XXX/XXX 和 rpc-secret=XXXX) <a href="https://pan.baidu.com/s/1_xc2lHYIvN53jMRHc2KrHA" title="conf下载">conf下载</a> 配置完后利用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/etc/init.d/S81aria2 restart</span><br></pre></td></tr></table></figure><p>重启服务</p><h2 id="更新版本（aria2c文件）"><a href="#更新版本（aria2c文件）" class="headerlink" title="更新版本（aria2c文件）"></a>更新版本（aria2c文件）</h2><p>先将Aria2服务停止</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/etc/init.d/S81aria2 stop</span><br></pre></td></tr></table></figure><p>然后在/opt/bin中替换编译的aria2c文件，并将权限设置为0755后重启Aria2服务。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/etc/init.d/S81aria2 start</span><br></pre></td></tr></table></figure><h2 id="限制CPU占用"><a href="#限制CPU占用" class="headerlink" title="限制CPU占用"></a>限制CPU占用</h2><p>查看了路由器管理界面，发现下载时CPU占用过高，所以要对Aria2进行CPU限制。 安装cpulimit</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opkg install limitcpu</span><br></pre></td></tr></table></figure><p>安装完后通过命令限制cpu占用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cpulimit -P aria2c -l 30 -b</span><br></pre></td></tr></table></figure><h2 id="添加开机启动"><a href="#添加开机启动" class="headerlink" title="添加开机启动"></a>添加开机启动</h2><p>在/jffs/scripts/post-mount文件最后添加</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/opt/etc/init.d/S81aria2 start</span><br><span class="line">cpulimit -P aria2c -l 30 -b</span><br></pre></td></tr></table></figure><h2 id="添加自动更新Tracker脚本"><a href="#添加自动更新Tracker脚本" class="headerlink" title="添加自动更新Tracker脚本"></a>添加自动更新Tracker脚本</h2><p>（不建议添加自动更新，会导致Aria2进程莫名消失） 在/opt/var/aria2新建文件trackers-list-aria2.sh写入以下内容，将编码格式设置为UTF-8，并将权限设置为0755。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line">list=`wget -qO- https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_all.txt|awk NF|sed &quot;:a;N;s/\n/,/g;ta&quot;`</span><br><span class="line">if [ -z &quot;`grep &quot;bt-tracker&quot; /opt/etc/aria2.conf`&quot; ]; then</span><br><span class="line">    sed -i &#x27;$a bt-tracker=&#x27;$&#123;list&#125; /opt/etc/aria2.conf</span><br><span class="line">    echo add......</span><br><span class="line">else</span><br><span class="line">    sed -i &quot;s@bt-tracker.*@bt-tracker=$list@g&quot; /opt/etc/aria2.conf</span><br><span class="line">    echo update......</span><br><span class="line">fi</span><br><span class="line">sleep 1</span><br><span class="line"></span><br><span class="line">/opt/etc/init.d/S81aria2 restart</span><br></pre></td></tr></table></figure><p>这里可以用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/sh /opt/var/aria2/trackers-list-aria2.sh</span><br></pre></td></tr></table></figure><p>测试一下这个脚本，如果报错显示</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">syntax error: unexpected end of file (expecting &quot;then&quot;)</span><br></pre></td></tr></table></figure><p>那么利用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /opt/var/aria2/trackers-list-aria2.sh</span><br></pre></td></tr></table></figure><p>删除每行最后所有的^M后保存即可。（具体如何在Linux编辑请百度） 最后将下面定时运行这个脚本命令写入/jffs/scripts/post-mount文件，每天凌晨4点更新Tracker。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cru a trackersupdate &quot;0 4 * * * /bin/sh /opt/var/aria2/trackers-list-aria2.sh&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;之前折腾了一下小宝固件软件中心的Aria2，安装是方便了，但是问题也不少。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Bug不少，经常莫名其妙假死。&lt;</summary>
      
    
    
    
    
    <category term="瞎折腾" scheme="http://www.zigma.cc/tags/%E7%9E%8E%E6%8A%98%E8%85%BE/"/>
    
  </entry>
  
  <entry>
    <title>frp+Aria2实现远程下载管理</title>
    <link href="http://www.zigma.cc/2018/05/01/frp+Aria2%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E4%B8%8B%E8%BD%BD%E7%AE%A1%E7%90%86/"/>
    <id>http://www.zigma.cc/2018/05/01/frp+Aria2%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E4%B8%8B%E8%BD%BD%E7%AE%A1%E7%90%86/</id>
    <published>2018-05-01T03:14:24.000Z</published>
    <updated>2022-01-04T03:11:58.022Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在捣鼓Aria2下载，恰值西部世界第二季开播，白天上班，无法在内网管理，所以开始折腾内网穿透的事情。 之前用的方案是华硕第三方梅林——小宝固件的DDNS穿透，但是最近一直不稳，而且已经好几天无法连接，所以自己在VPS搭建了frp穿透服务。</p><h2 id="基本思路"><a href="#基本思路" class="headerlink" title="基本思路"></a>基本思路</h2><ol><li> 华硕路由搭建Aria2下载环境和frp穿透客户端；</li><li> 远程VPS搭建frp穿透服务端；</li><li> 顺便搭建AriaNG网页服务端（可选）。<br><img src="http://zigma-pic.test.upcdn.net/blog/frparia2/1_1.jpg" alt="网络拓补" title="网络拓补"></li></ol><h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><p>华硕路由刷第三方梅林固件，这里使用小宝固件，并在软件中心安装Aria2和frp客户端。</p><h3 id="Ari2设置"><a href="#Ari2设置" class="headerlink" title="Ari2设置"></a>Ari2设置</h3><p><img src="http://zigma-pic.test.upcdn.net/blog/frparia2/1.jpg" alt="Aria2设置" title="Aria2设置1"> <img src="http://zigma-pic.test.upcdn.net/blog/frparia2/2.jpg" alt="Aria2设置2" title="Aria2设置2"> Aria2常规设置，如果没有速度则添加额外以下Tracker，基本种子都有速度，而且连接速度越来越快了。</p><blockquote><p><a href="https://open.kickasstracker.com/announce,udp://tracker.coppersurfer.tk:6969,http://torrentsmd.com:8080/announce,udp://tracker.pirateparty.gr:6969/announce,udp://tracker.coppersurfer.tk:6969/announce,udp://tracker4.itzmx.com:2710/announce,udp://tracker.uw0.xyz:6969/announce,udp://tracker.cypherpunks.ru:6969/announce,udp://open.stealth.si:80/announce,http://retracker.telecom.by:80/announce,udp://191.96.249.23:6969/announce,udp://78.142.19.42:1337/announce,udp://123.249.16.65:2710/announce,udp://185.82.217.160:1337/announce,udp://163.172.81.35:1337/announce,https://zer0day.000webhostapp.com:443/announce,udp://public.popcorn-tracker.org:6969/announce,https://linetorrent.xyz:443/announce,udp://tracker.leechers-paradise.org:6969/announce,https://open.acgnxtracker.com:443/announce,http://bt2.54new.com:8080/announce,http://bt1.54new.com:65533/announce,http://ipv6.54new.com:8080/announce,http://tracker.trackerfix.com/announce,udp://tracker.trackerfix.com:80/announce,udp://9.rarbg.com:2790/announce,udp://9.rarbg.to:2790/announce,udp://inferno.demonoid.pw:3418/announce,udp://bt.aoeex.com:8000/announce,udp://tracker.internetwarriors.net:1337/announce,udp://tracker.swateam.org.uk:2710/announce,udp://tracker.zer0day.to:1337/announce,udp://p4p.arenabg.com:1337/announce">https://open.kickasstracker.com:443/announce,udp://tracker.coppersurfer.tk:6969,http://torrentsmd.com:8080/announce,udp://tracker.pirateparty.gr:6969/announce,udp://tracker.coppersurfer.tk:6969/announce,udp://tracker4.itzmx.com:2710/announce,udp://tracker.uw0.xyz:6969/announce,udp://tracker.cypherpunks.ru:6969/announce,udp://open.stealth.si:80/announce,http://retracker.telecom.by:80/announce,udp://191.96.249.23:6969/announce,udp://78.142.19.42:1337/announce,udp://123.249.16.65:2710/announce,udp://185.82.217.160:1337/announce,udp://163.172.81.35:1337/announce,https://zer0day.000webhostapp.com:443/announce,udp://public.popcorn-tracker.org:6969/announce,https://linetorrent.xyz:443/announce,udp://tracker.leechers-paradise.org:6969/announce,https://open.acgnxtracker.com:443/announce,http://bt2.54new.com:8080/announce,http://bt1.54new.com:65533/announce,http://ipv6.54new.com:8080/announce,http://tracker.trackerfix.com/announce,udp://tracker.trackerfix.com:80/announce,udp://9.rarbg.com:2790/announce,udp://9.rarbg.to:2790/announce,udp://inferno.demonoid.pw:3418/announce,udp://bt.aoeex.com:8000/announce,udp://tracker.internetwarriors.net:1337/announce,udp://tracker.swateam.org.uk:2710/announce,udp://tracker.zer0day.to:1337/announce,udp://p4p.arenabg.com:1337/announce</a></p></blockquote><p>需要注意的是，BT下载还是勾选LDP和DHT以及勾去强制加密。关于PT下载，以我的理解，不混迹PT论坛、不下载PT资源、只下载热门资源是没有必要去伪装PT客户端的。勾去强制加密是为了提升下载速度。至于端口设置，默认的就行端口转发也没有必要，至少我两层路由下载也一直没有问题。</p><h3 id="frp客户端设置"><a href="#frp客户端设置" class="headerlink" title="frp客户端设置"></a>frp客户端设置</h3><p>按照道理是应该先配置服务端再配置客户端，为了排版好看先放在这里吧。 只列出需要修改的设置，其他均为默认设置。 </p><p>服务器——frp服务端的服务器地址； </p><p>端口——frp服务器监听frp服务的端口，并非访问frp面板的端口； </p><p>Token——搭建服务端时所填写的Token；</p><p>HTTP/HTTPS——如果像我一样在服务端还搭建了网页，就需要更改成其他端口；</p><p>Frpc用户名称——登录frp面板的用户名； </p><p>穿透服务协议——需要在域名解析中新增二级域名，比如test.zigma.cc对应远程主机端口就是上面的HTTP端口8001，192.168.2.1和6800则是本地路由地址和Aria2端口。<br><img src="http://zigma-pic.test.upcdn.net/blog/frparia2/3.jpg" alt="frp设置" title="frp设置"></p><h2 id="服务端配额制"><a href="#服务端配额制" class="headerlink" title="服务端配额制"></a>服务端配额制</h2><p>利用Koolshare社区提供的一键安装包进行安装，安装过程均有提示，这里就不重复造轮子了。 <a href="http://koolshare.cn/thread-65379-1-1.html" title="具体教程链接">具体教程链接</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://raw.githubusercontent.com/clangcn/onekey-install-shell/master/frps/install-frps.sh -O ./install-frps.sh</span><br><span class="line">chmod 700 ./install-frps.sh</span><br><span class="line">./install-frps.sh install</span><br></pre></td></tr></table></figure><h2 id="配置AriaNG服务端"><a href="#配置AriaNG服务端" class="headerlink" title="配置AriaNG服务端"></a>配置AriaNG服务端</h2><p>其实这个就是个静态网页，网上的资源还是挺多的，不过自己还有个64M小鸡闲着也是闲着，挂这个UI刚好，配置Nginx后将AriaNG的<a href="https://github.com/mayswind/AriaNg" title="Github项目">Github项目</a>内容上传到服务器，而且这个项目都是基本请求一次后一直可以在本地缓存中使用，对于Aria2下载状态也是增量请求数据，因此带宽使用很少。 然后在AriaNG设置界面添加RPC地址为解析的二级域名test.zigma.cc，端口对应8001，填写完Token即可，AriaNG自适应移动端，界面友好，在手机端也可以很方便地管理。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近在捣鼓Aria2下载，恰值西部世界第二季开播，白天上班，无法在内网管理，所以开始折腾内网穿透的事情。 之前用的方案是华硕第三方梅林——小</summary>
      
    
    
    
    
    <category term="瞎折腾" scheme="http://www.zigma.cc/tags/%E7%9E%8E%E6%8A%98%E8%85%BE/"/>
    
  </entry>
  
</feed>
